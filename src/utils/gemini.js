const axios = require('axios')
const { ADMIN_CHAT_ID, LAMP_THREAD_ID, MODULES } = require('../config')
const { sendTelegramMessage } = require('./messaging')

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenRouter API
const OPENROUTER_API_KEY2 = process.env.OPENROUTER_API_KEY2

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É —á–∞—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–æ–±—â–µ–Ω–∏–π
 * @param {Array} messages - –ú–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –ø–µ—Ä–∏–æ–¥
 * @param {boolean} isEveningReport - –ü—Ä–∏–∑–Ω–∞–∫ –≤–µ—á–µ—Ä–Ω–µ–≥–æ –æ—Ç—á–µ—Ç–∞
 * @returns {Promise<string>} –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞
 */
async function generateChatSummary(messages, isEveningReport = false) {
	try {
		// –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
		const preparedMessages = messages.map(msg => {
			// –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
			const from = msg.from?.first_name || msg.from?.username || '–ê–Ω–æ–Ω–∏–º'
			const text = msg.text || ''
			const caption = msg.caption || ''
			const content = text || caption || '[–º–µ–¥–∏–∞]'

			// –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
			let dateStr = ''
			if (msg.date) {
				if (msg.date instanceof Date) {
					dateStr = msg.date.toLocaleString('ru-RU')
				} else {
					dateStr = new Date(msg.date * 1000).toLocaleString('ru-RU')
				}
			}

			return `[${dateStr}] ${from}: ${content}`
		})

		// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ –¥–ª—è –æ—Ç—á–µ—Ç–∞
		const timePeriod = isEveningReport
			? '–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 —á–∞—Å–æ–≤ (—Å 8:00 –¥–æ 20:00)'
			: '–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 —á–∞—Å–æ–≤ (—Å 20:00 –¥–æ 8:00)'

		// –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –º–æ–¥–µ–ª–∏ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
		const prompt = `–¢—ã - –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–æ–Ω–æ–∫–æ–ª–µ—Å–Ω–æ–≥–æ —á–∞—Ç–∞ –≤ Telegram. –°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π –≤ —á–∞—Ç–µ ${timePeriod}.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–≤–æ–¥–∫–µ:
1. –í—ã–¥–µ–ª–∏ 3-7 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–µ–º –æ–±—Å—É–∂–¥–µ–Ω–∏—è
2. –ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏ –∫–∞–∂–¥—É—é —Ç–µ–º—É (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
3. –û—Ç–º–µ—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–∏—Å–∫—É—Å—Å–∏–π
4. –í—ã–¥–µ–ª–∏ –≤–∞–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏–ª–∏ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
5. –£–∫–∞–∂–∏ –Ω–∞–∏–±–æ–ª–µ–µ –æ–±—Å—É–∂–¥–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã

–§–æ—Ä–º–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
- –ö—Ä—É–ø–Ω—ã–µ —Ç–µ–º—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—ã–¥–µ–ª–µ–Ω—ã –∫–∞–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∏
- –ò—Å–ø–æ–ª—å–∑—É–π –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–¥–ø—É–Ω–∫—Ç–æ–≤
- –°–æ—Ö—Ä–∞–Ω—è–π —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
- –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
- –ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Å—è –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–≥–æ —Ç–æ–Ω–∞

–í–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ (${preparedMessages.length} —Å–æ–æ–±—â–µ–Ω–∏–π):
${preparedMessages.join('\n')}`

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenRouter API —Å –º–æ–¥–µ–ª—å—é deepseek-chat-v3-0324:free
		const response = await axios.post(
			'https://openrouter.ai/api/v1/chat/completions',
			{
				model: 'deepseek/deepseek-chat-v3-0324:free',
				messages: [
					{
						role: 'user',
						content: prompt,
					},
				],
				max_tokens: 1500,
			},
			{
				headers: {
					Authorization: `Bearer ${OPENROUTER_API_KEY2}`,
					'Content-Type': 'application/json',
					'HTTP-Referer': 'https://lamp_tg_bot', // –£–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –∑–∞–ø—Ä–æ—Å–∞
					'X-Title': 'Lamp Telegram Bot', // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
				},
			}
		)

		// –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
		return response.data.choices[0].message.content
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–æ–¥–∫–∏:', error)
		throw error
	}
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≤–æ–¥–∫—É –≤ –∞–¥–º–∏–Ω —á–∞—Ç
 * @param {Telegraf} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 * @param {string} summary - –¢–µ–∫—Å—Ç —Å–≤–æ–¥–∫–∏
 */
async function sendSummaryToAdmin(bot, summary) {
	try {
		await sendTelegramMessage(
			bot,
			MODULES.CHAT_SUMMARY.REPORT_CHAT_ID,
			`üìä <b>–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞ —á–∞—Ç–∞</b>\n\n${summary}`,
			{
				message_thread_id: MODULES.CHAT_SUMMARY.REPORT_THREAD_ID,
				parse_mode: 'HTML',
			}
		)
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–≤–æ–¥–∫–∏:', error)
		throw error
	}
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —é–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
 * @param {string} forbiddenWord - –ó–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
 * @param {string} fullMessage - –ü–æ–ª–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {Promise<string>} - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
 */
async function generateForbiddenWordResponse(forbiddenWord, fullMessage = '') {
	const axios = require('axios')
	const OPENROUTER_API_KEY = process.env.OPENROUTER_API_KEY2

	if (!OPENROUTER_API_KEY) {
		console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç API –∫–ª—é—á OPENROUTER_API_KEY2')
		throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç API –∫–ª—é—á OPENROUTER_API_KEY2')
	}

	// –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫
	const cleanMessage = fullMessage.replace(/\s+/g, ' ').trim()

	const prompt = `–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–π —é–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç (–æ–¥–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!) –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –≤ —á–∞—Ç–µ.

–ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: "${cleanMessage}"
–û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω–æ–µ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–µ —Å–ª–æ–≤–æ: "${forbiddenWord}"

–í–∞–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:
- –ò—Å–ø–æ–ª—å–∑—É–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π —Å—Ç–∏–ª—å
- –î–æ–±–∞–≤—å 1-2 –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —ç–º–æ–¥–∑–∏
- –°–æ—Ö—Ä–∞–Ω—è–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ç–æ–Ω —Å –ª–µ–≥–∫–æ–π –∏—Ä–æ–Ω–∏–µ–π
- –ù–ï –ø–æ–≤—Ç–æ—Ä—è–π —Å–∞–º–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
- –£—á–∏—Ç—ã–≤–∞–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω –≤—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–∞–≥—Ä–µ—Å—Å–∏—è/—à—É—Ç–∫–∞/—Å–ø–æ—Ä/etc)
- –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ - –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª–µ–µ —Å–¥–µ—Ä–∂–∞–Ω–Ω—ã–º
- –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —à—É—Ç–æ—á–Ω–æ–µ - –º–æ–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –±–æ–ª–µ–µ –∏–≥—Ä–∏–≤–æ
- –ù–∏–∫–∞–∫–∏—Ö –Ω—Ä–∞–≤–æ—É—á–µ–Ω–∏–π –∏ –º–æ—Ä–∞–ª–∏–∑–∞—Ç–æ—Ä—Å—Ç–≤–∞
- –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–Ω—è—Ç–µ–Ω –≤—Å–µ–º
- –ú–∞–∫—Å–∏–º—É–º 50-60 —Å–∏–º–≤–æ–ª–æ–≤ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏`

	try {
		console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenRouter API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞')
		console.log('üí¨ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–µ —Å–ª–æ–≤–æ:', forbiddenWord)
		console.log('üìù –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:', cleanMessage)

		const response = await axios.post(
			'https://openrouter.ai/api/v1/chat/completions',
			{
				model: 'anthropic/claude-3-haiku',
				messages: [
					{
						role: 'user',
						content: prompt,
					},
				],
				max_tokens: 100,
			},
			{
				headers: {
					Authorization: `Bearer ${OPENROUTER_API_KEY}`,
					'Content-Type': 'application/json',
					'HTTP-Referer': 'https://lamp_tg_bot',
					'X-Title': 'Lamp Telegram Bot',
				},
			}
		)

		console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç OpenRouter API')
		const generatedResponse = response.data.choices[0].message.content.trim()

		return generatedResponse
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞:', error)
		// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
		return 'üòÖ –î–∞–≤–∞–π –ø–æ–º—è–≥—á–µ —Å –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏!'
	}
}

module.exports = {
	generateChatSummary,
	sendSummaryToAdmin,
	generateForbiddenWordResponse,
}
