const { GoogleGenerativeAI } = require('@google/generative-ai')
const { BOT_TOKEN, ADMIN_CHAT_ID, LAMP_THREAD_ID } = require('../config')
const { sendTelegramMessage } = require('./messaging')

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Gemini API
const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY)

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É —á–∞—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–æ–±—â–µ–Ω–∏–π
 * @param {Array} messages - –ú–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –ø–µ—Ä–∏–æ–¥
 * @returns {Promise<string>} –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞
 */
async function generateChatSummary(messages) {
	try {
		const model = genAI.getGenerativeModel({ model: 'gemini-1.5-flash' })

		// –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
		const preparedMessages = messages.map(msg => {
			// –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
			const from = msg.from?.first_name || msg.from?.username || '–ê–Ω–æ–Ω–∏–º'
			const text = msg.text || ''
			const caption = msg.caption || ''
			const content = text || caption || '[–º–µ–¥–∏–∞]'

			// –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
			let dateStr = ''
			if (msg.date) {
				if (msg.date instanceof Date) {
					dateStr = msg.date.toLocaleString('ru-RU')
				} else {
					dateStr = new Date(msg.date * 1000).toLocaleString('ru-RU')
				}
			}

			return `[${dateStr}] ${from}: ${content}`
		})

		// –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è Gemini —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
		const prompt = `–¢—ã - –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–æ–Ω–æ–∫–æ–ª–µ—Å–Ω–æ–≥–æ —á–∞—Ç–∞ –≤ Telegram. –°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π –≤ —á–∞—Ç–µ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–≤–æ–¥–∫–µ:
1. –í—ã–¥–µ–ª–∏ 3-7 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–µ–º –æ–±—Å—É–∂–¥–µ–Ω–∏—è
2. –ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏ –∫–∞–∂–¥—É—é —Ç–µ–º—É (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
3. –û—Ç–º–µ—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–∏—Å–∫—É—Å—Å–∏–π
4. –í—ã–¥–µ–ª–∏ –≤–∞–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏–ª–∏ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
5. –£–∫–∞–∂–∏ –Ω–∞–∏–±–æ–ª–µ–µ –æ–±—Å—É–∂–¥–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã

–§–æ—Ä–º–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
- –ö—Ä—É–ø–Ω—ã–µ —Ç–µ–º—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—ã–¥–µ–ª–µ–Ω—ã –∫–∞–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∏
- –ò—Å–ø–æ–ª—å–∑—É–π –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–¥–ø—É–Ω–∫—Ç–æ–≤
- –°–æ—Ö—Ä–∞–Ω—è–π —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
- –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
- –ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Å—è –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–≥–æ —Ç–æ–Ω–∞

–í–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ (${preparedMessages.length} —Å–æ–æ–±—â–µ–Ω–∏–π):
${preparedMessages.join('\n')}`

		const result = await model.generateContent(prompt)
		const response = await result.response
		return response.text()
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–æ–¥–∫–∏:', error)
		throw error
	}
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≤–æ–¥–∫—É –≤ –∞–¥–º–∏–Ω —á–∞—Ç
 * @param {Telegraf} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 * @param {string} summary - –¢–µ–∫—Å—Ç —Å–≤–æ–¥–∫–∏
 */
async function sendSummaryToAdmin(bot, summary) {
	try {
		await sendTelegramMessage(
			bot,
			ADMIN_CHAT_ID,
			`üìä <b>–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞ —á–∞—Ç–∞</b>\n\n${summary}`,
			{ message_thread_id: LAMP_THREAD_ID, parse_mode: 'HTML' }
		)
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–≤–æ–¥–∫–∏:', error)
		throw error
	}
}

module.exports = {
	generateChatSummary,
	sendSummaryToAdmin,
}
