/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ Telegram API
 * @module errorHandler
 */

const { ADMIN_CHAT_ID, LAMP_THREAD_ID, MODULES } = require('../config')

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –±–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
 * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
 * @returns {boolean} - true, –µ—Å–ª–∏ –±–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
 */
function isBotBlocked(error) {
	return error.description?.includes('bot was blocked by the user')
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
 * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
 * @returns {boolean} - true, –µ—Å–ª–∏ –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥
 */
function cantInitiateConversation(error) {
	return error.description?.includes(
		"bot can't initiate conversation with a user"
	)
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–≤—è–∑–∞–Ω–∞ –ª–∏ –æ—à–∏–±–∫–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
 * @returns {boolean} - true, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 */
function isUserAccessError(error) {
	return isBotBlocked(error) || cantInitiateConversation(error)
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –æ—à–∏–±–∫–æ–π —É—Å—Ç–∞—Ä–µ–≤—à–µ–≥–æ callback –∑–∞–ø—Ä–æ—Å–∞
 * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
 * @returns {boolean} - true, –µ—Å–ª–∏ callback –∑–∞–ø—Ä–æ—Å —É—Å—Ç–∞—Ä–µ–ª
 */
function isCallbackQueryExpired(error) {
	return (
		error.description?.includes('query is too old') ||
		error.description?.includes('query ID is invalid')
	)
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –æ—à–∏–±–∫–æ–π –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
 * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
 * @returns {boolean} - true, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –ª–∏–º–∏—Ç–æ–º –∑–∞–ø—Ä–æ—Å–æ–≤
 */
function isRateLimitError(error) {
	return error.code === 429 || error.description?.includes('retry after')
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –Ω–∞–π–¥–µ–Ω –ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —á–∞—Ç
 * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
 * @returns {boolean} - true, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω
 */
function isJoinRequestMissing(error) {
	return error.description?.includes('HIDE_REQUESTER_MISSING')
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ—ë —Ç–∏–ø–∞
 * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
 * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {string} - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
 */
function formatUserAccessError(error, userId) {
	if (isBotBlocked(error)) {
		return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.`
	}

	if (cantInitiateConversation(error)) {
		return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.`
	}

	return `–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}: ${
		error.description || error.message
	}`
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç
 * @async
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
 * @param {string} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
 * @param {Object} [options={}] - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 * @param {boolean} [options.notifyAdmin=true] - –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
 * @param {string|number} [options.userId] - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å –æ—à–∏–±–∫–æ–π
 * @param {string} [options.functionName] - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –≥–¥–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
 */
async function logError(bot, error, context, options = {}) {
	const { notifyAdmin = true, userId = null, functionName = null } = options

	// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
	console.error(`‚ùå –û—à–∏–±–∫–∞: ${context || '–±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞'}:`, error)

	// –ï—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ —É–≤–µ–¥–æ–º–ª—è—Ç—å –∞–¥–º–∏–Ω–∞, –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º
	if (!notifyAdmin || !bot) return

	try {
		// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
		let errorMessage = `üö® <b>–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ</b>\n\n`

		if (functionName) {
			errorMessage += `<b>–§—É–Ω–∫—Ü–∏—è:</b> ${functionName}\n`
		}

		errorMessage += `<b>–ö–æ–Ω—Ç–µ–∫—Å—Ç:</b> ${context || '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n`
		errorMessage += `<b>–û—à–∏–±–∫–∞:</b> ${error.message || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}\n`

		if (userId) {
			errorMessage += `<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="tg://user?id=${userId}">${userId}</a>\n`
		}

		// –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
		if (isUserAccessError(error) && userId) {
			errorMessage += `\n<i>${formatUserAccessError(error, userId)}</i>\n`
		}

		// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ –¥–ª—è –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫
		if (!isUserAccessError(error) && !isRateLimitError(error) && error.stack) {
			const stackTrace = error.stack.split('\n').slice(0, 3).join('\n')
			errorMessage += `\n<pre>${stackTrace}</pre>`
		}

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º —Å –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
		await bot.telegram
			.sendMessage(ADMIN_CHAT_ID, errorMessage, {
				message_thread_id: LAMP_THREAD_ID,
				parse_mode: 'HTML',
				disable_notification: isUserAccessError(error), // –û—Ç–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –æ—à–∏–±–æ–∫ –¥–æ—Å—Ç—É–ø–∞
			})
			.catch(sendError => {
				console.error(
					'‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∞–¥–º–∏–Ω–∞–º:',
					sendError.message
				)
			})
	} catch (notifyError) {
		console.error(
			'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ:',
			notifyError
		)
	}
}

module.exports = {
	isBotBlocked,
	cantInitiateConversation,
	isUserAccessError,
	isRateLimitError,
	isJoinRequestMissing,
	formatUserAccessError,
	isCallbackQueryExpired,
	logError,
}
