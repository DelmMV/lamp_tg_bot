/**
 * –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–º–µ–Ω—ã –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
 * @module handlers/requestCheckHandler
 */

const { MongoClient } = require('mongodb')
const {
	MONGO_URL,
	DB_NAME,
	ADMIN_CHAT_ID,
	LAMP_THREAD_ID,
	MONO_PITER_CHAT_ID,
	JOIN_REQUEST,
} = require('../config')
const { banUser } = require('../db')

// –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
const BAN_BUTTON = 'ban_user'
const CONFIRM_BAN_BUTTON = 'confirm_ban'
const CANCEL_BAN_BUTTON = 'cancel_ban'
const ACCEPT_BUTTON = 'accept_user'
const CONFIRM_ACCEPT_BUTTON = 'confirm_accept'
const CANCEL_ACCEPT_BUTTON = 'cancel_accept'

/** @type {import('mongodb').Db} */
let db = null

// –¢–∞–π–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫
let checkRequestsTimer = null

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
 * @async
 * @returns {Promise<import('mongodb').Db>} –≠–∫–∑–µ–º–ø–ª—è—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
 */
async function connectToDatabase() {
	try {
		const client = new MongoClient(MONGO_URL)
		await client.connect()
		db = client.db(DB_NAME)
		console.log('Connected to MongoDB')
		return db
	} catch (error) {
		console.error('MongoDB connection error:', error)
		throw error
	}
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
 * @async
 * @param {Telegraf} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * @returns {Promise<Array<Object>>} –°–ø–∏—Å–æ–∫ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
 */
async function checkAndCancelExpiredRequests(bot) {
	try {
		const joinRequestsCollection = db.collection('joinRequests')
		const now = new Date()
		const lifetimeMinutes = JOIN_REQUEST.LIFETIME_MINUTES

		// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
		const expiredRequests = await joinRequestsCollection
			.find({
				status: 'pending',
				createdAt: {
					$lt: new Date(now.getTime() - lifetimeMinutes * 60 * 1000),
				},
			})
			.toArray()

		// –û—Ç–º–µ–Ω—è–µ–º –∫–∞–∂–¥—É—é –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—É—é –∑–∞—è–≤–∫—É
		const canceledRequests = []
		for (const request of expiredRequests) {
			try {
				// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∞ –ª–∏ –∑–∞—è–≤–∫–∞ —É–∂–µ –æ—Ç–º–µ–Ω–µ–Ω–∞
				if (request.status === 'expired') {
					console.log(`‚ÑπÔ∏è –ó–∞—è–≤–∫–∞ ${request._id} —É–∂–µ –æ—Ç–º–µ–Ω–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`)
					continue
				}

				// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –≤ Telegram
				try {
					const chatMember = await bot.telegram.getChatMember(
						MONO_PITER_CHAT_ID,
						request.userId
					)

					// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
					if (chatMember.status !== 'left') {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ (—Å—Ç–∞—Ç—É—Å: ${chatMember.status})`,
								},
							}
						)
						continue
					}
				} catch (error) {
					// –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ USER_ID_INVALID
					if (error.message.includes('USER_ID_INVALID')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason:
										'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏–ª –∞–∫–∫–∞—É–Ω—Ç)',
								},
							}
						)

						// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω-–∫–∞–Ω–∞–ª
						await bot.telegram.sendMessage(
							ADMIN_CHAT_ID,
							`‚ö†Ô∏è <b>–ó–∞—è–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n` +
								`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ID ${request.userId}\n` +
								`‚ùå –ü—Ä–∏—á–∏–Ω–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏–ª –∞–∫–∫–∞—É–Ω—Ç)\n` +
								`‚è± –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: ${request.createdAt.toLocaleString()}`,
							{
								message_thread_id: LAMP_THREAD_ID,
								parse_mode: 'HTML',
							}
						)
						continue
					}

					// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É user is deactivated
					if (error.message.includes('user is deactivated')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –∞–∫–∫–∞—É–Ω—Ç',
								},
							}
						)
						continue
					}

					// –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
					await joinRequestsCollection.updateOne(
						{ _id: request._id },
						{
							$set: {
								status: 'expired',
								updatedAt: new Date(),
								reason: `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞: ${error.message}`,
							},
						}
					)
					continue
				}

				// –û—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ Telegram
				try {
					await bot.telegram.declineChatJoinRequest(
						MONO_PITER_CHAT_ID,
						request.userId
					)

					// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
					const result = await joinRequestsCollection.updateOne(
						{ _id: request._id },
						{
							$set: {
								status: 'expired',
								updatedAt: new Date(),
								reason: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏',
							},
						}
					)

					if (result.modifiedCount > 0) {
						canceledRequests.push(request)

						// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
						try {
							const hours = Math.floor(lifetimeMinutes / 60)
							const minutes = lifetimeMinutes % 60
							const timeFormat =
								hours > 0 ? `${hours} —á. ${minutes} –º–∏–Ω.` : `${minutes} –º–∏–Ω.`

							await bot.telegram.sendMessage(
								request.userId,
								`‚ö†Ô∏è <b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞</b>\n\n` +
									`–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ (${timeFormat})\n` +
									`–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è`,
								{ parse_mode: 'HTML' }
							)
						} catch (userNotifyError) {
							// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
							const errorType = userNotifyError.message.includes(
								'USER_ID_INVALID'
							)
								? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏–ª –∞–∫–∫–∞—É–Ω—Ç)'
								: userNotifyError.message.includes(
										'bot was blocked by the user'
								  )
								? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞'
								: userNotifyError.message.includes('user is deactivated')
								? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –∞–∫–∫–∞—É–Ω—Ç'
								: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'

							// –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏
							if (
								!userNotifyError.message.includes(
									'bot was blocked by the user'
								) &&
								!userNotifyError.message.includes('USER_ID_INVALID') &&
								!userNotifyError.message.includes('user is deactivated')
							) {
								console.error(
									`‚ùå –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${request.userId}:`,
									userNotifyError
								)
							} else {
								console.log(
									`‚ÑπÔ∏è –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${request.userId}: ${errorType}`
								)
							}

							// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π –ø—Ä–∏—á–∏–Ω–æ–π
							await joinRequestsCollection.updateOne(
								{ _id: request._id },
								{
									$set: {
										status: 'expired',
										updatedAt: new Date(),
										reason: `–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ (${errorType})`,
									},
								}
							)
						}

						// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω-–∫–∞–Ω–∞–ª
						const adminHours = Math.floor(lifetimeMinutes / 60)
						const adminMinutes = lifetimeMinutes % 60
						const adminTimeFormat =
							adminHours > 0
								? `${adminHours} —á. ${adminMinutes} –º–∏–Ω.`
								: `${adminMinutes} –º–∏–Ω.`

						await bot.telegram.sendMessage(
							ADMIN_CHAT_ID,
							`‚ö†Ô∏è <b>–ó–∞—è–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n` +
								`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href="tg://user?id=${request.userId}">${
									request.username || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'
								}</a>\n` +
								`‚è± –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: ${request.createdAt.toLocaleString()}\n` +
								`‚è≥ –í—Ä–µ–º—è –∂–∏–∑–Ω–∏: ${adminTimeFormat}`,
							{
								message_thread_id: LAMP_THREAD_ID,
								parse_mode: 'HTML',
								reply_markup: {
									inline_keyboard: [
										[
											{
												text: '‚ùå –ë–∞–Ω',
												callback_data: `${BAN_BUTTON}:${request.userId}`,
											},
										],
									],
								},
							}
						)
					}
				} catch (error) {
					// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É HIDE_REQUESTER_MISSING
					if (error.message.includes('HIDE_REQUESTER_MISSING')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason: '–ó–∞—è–≤–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞',
								},
							}
						)
						continue
					}

					// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É USER_ID_INVALID
					if (error.message.includes('USER_ID_INVALID')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason:
										'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏–ª –∞–∫–∫–∞—É–Ω—Ç)',
								},
							}
						)
						continue
					}

					// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É user is deactivated
					if (error.message.includes('user is deactivated')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –∞–∫–∫–∞—É–Ω—Ç',
								},
							}
						)
						continue
					}

					// –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω-–∫–∞–Ω–∞–ª
					await bot.telegram.sendMessage(
						ADMIN_CHAT_ID,
						`‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞—è–≤–∫–∏</b>\n\n` +
							`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href="tg://user?id=${request.userId}">${
								request.username || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'
							}</a>\n` +
							`‚ùå –û—à–∏–±–∫–∞: ${error.message}`,
						{
							message_thread_id: LAMP_THREAD_ID,
							parse_mode: 'HTML',
						}
					)
				}
			} catch (error) {
				// –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
				if (
					!error.message.includes('HIDE_REQUESTER_MISSING') &&
					!error.message.includes('user is deactivated')
				) {
					console.error(
						`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${request.userId}:`,
						error
					)
				}
			}
		}

		return canceledRequests
	} catch (error) {
		console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–æ–∫:', error)
		return []
	}
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–æ–∫
 * @param {Telegraf} botInstance - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
function startRequestCheckTimer(botInstance) {
	try {
		// –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
		if (checkRequestsTimer) {
			clearInterval(checkRequestsTimer)
		}

		// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ä–∞–∑—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
		checkAndCancelExpiredRequests(botInstance).catch(error => {
			console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–æ–∫:', error)
		})

		// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
		checkRequestsTimer = setInterval(() => {
			checkAndCancelExpiredRequests(botInstance).catch(error => {
				console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–æ–∫:', error)
			})
		}, JOIN_REQUEST.CHECK_INTERVAL_MINUTES * 60 * 1000)

		console.log('‚úÖ –¢–∞–π–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫ –∑–∞–ø—É—â–µ–Ω')
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫:', error)
	}
}

/**
 * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–∞–π–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫
 */
function stopRequestCheckTimer() {
	if (checkRequestsTimer) {
		clearInterval(checkRequestsTimer)
		checkRequestsTimer = null
		console.log('‚úÖ –¢–∞–π–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
	}
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –±–∞–Ω–∞
async function handleBanButton(ctx) {
	const userId = ctx.callbackQuery.data.split(':')[1]

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
	await ctx.reply(
		`‚ö†Ô∏è <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–∞–Ω–∞</b>\n\n` +
			`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.`,
		{
			parse_mode: 'HTML',
			reply_markup: {
				inline_keyboard: [
					[
						{
							text: '‚ùå –¢–æ—á–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å',
							callback_data: `${CONFIRM_BAN_BUTTON}:${userId}`,
						},
						{ text: '‚úÖ –ù–µ—Ç', callback_data: `${CANCEL_BAN_BUTTON}:${userId}` },
					],
				],
			},
		}
	)
}

async function handleConfirmBan(ctx) {
	const userId = ctx.callbackQuery.data.split(':')[1]

	try {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–µ
		try {
			const chatMember = await ctx.telegram.getChatMember(
				MONO_PITER_CHAT_ID,
				userId
			)

			// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –≤—ã—Ö–æ–¥–∏–º
			if (chatMember.status === 'kicked') {
				await ctx.editMessageText(
					`‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href="tg://user?id=${userId}">${
						chatMember.user.first_name
					} ${chatMember.user.last_name || ''}</a> —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –≥—Ä—É–ø–ø–µ`,
					{
						parse_mode: 'HTML',
					}
				)
				return
			}
		} catch (error) {
			// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥—Ä—É–ø–ø–µ, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
			if (!error.message.includes('user not found')) {
				throw error
			}
		}

		// –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É
		try {
			await ctx.telegram.declineChatJoinRequest(MONO_PITER_CHAT_ID, userId)
		} catch (declineError) {
			// –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ HIDE_REQUESTER_MISSING, –∑–Ω–∞—á–∏—Ç –∑–∞—è–≤–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞
			// –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è
			if (!declineError.message.includes('HIDE_REQUESTER_MISSING')) {
				throw declineError
			}
		}

		// –ó–∞—Ç–µ–º –±–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		await ctx.telegram.banChatMember(MONO_PITER_CHAT_ID, userId)

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–Ω–µ –≤ –ë–î
		await banUser(userId, ctx.from.id, '–ó–∞–±–∞–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')

		// –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		try {
			await ctx.telegram.sendMessage(
				userId,
				`‚ö†Ô∏è <b>–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –≥—Ä—É–ø–ø–µ</b>\n`,
				{ parse_mode: 'HTML' }
			)
		} catch (notifyError) {
			// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è
			if (!notifyError.message.includes('bot was blocked by the user')) {
				console.error(
					'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:',
					notifyError
				)
			}
		}

		// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
		let userInfo = `ID: ${userId}`
		try {
			const user = await ctx.telegram.getChatMember(MONO_PITER_CHAT_ID, userId)
			userInfo = `<a href="tg://user?id=${userId}">${user.user.first_name} ${
				user.user.last_name || ''
			}</a>`
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', error)
		}

		// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫—Ç–æ –∑–∞–±–∞–Ω–∏–ª
		const adminInfo = `<a href="tg://user?id=${ctx.from.id}">${
			ctx.from.first_name
		} ${ctx.from.last_name || ''}</a>`

		await ctx.editMessageText(
			`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userInfo} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –≥—Ä—É–ø–ø–µ\n` +
				`–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω\n` +
				`üëÆ‚Äç‚ôÇÔ∏è –ó–∞–±–∞–Ω–∏–ª: ${adminInfo}`,
			{ parse_mode: 'HTML' }
		)
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
		await ctx.editMessageText(
			`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`,
			{ parse_mode: 'HTML' }
		)
	}
}

async function handleCancelBan(ctx) {
	await ctx.editMessageText(`‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ`, { parse_mode: 'HTML' })
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏–Ω—è—Ç–∏—è
async function handleAcceptButton(ctx) {
	const userId = ctx.callbackQuery.data.split(':')[1]

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
	await ctx.reply(
		`‚ö†Ô∏è <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–∏—è</b>\n\n` +
			`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É?`,
		{
			parse_mode: 'HTML',
			reply_markup: {
				inline_keyboard: [
					[
						{
							text: '‚úÖ –ü—Ä–∏–Ω—è—Ç—å',
							callback_data: `${CONFIRM_ACCEPT_BUTTON}:${userId}`,
						},
						{
							text: '‚ùå –û—Ç–º–µ–Ω–∞',
							callback_data: `${CANCEL_ACCEPT_BUTTON}:${userId}`,
						},
					],
				],
			},
		}
	)
}

async function handleConfirmAccept(ctx) {
	const userId = ctx.callbackQuery.data.split(':')[1]

	try {
		// –ü—Ä–∏–Ω–∏–º–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É
		await ctx.telegram.approveChatJoinRequest(MONO_PITER_CHAT_ID, userId)

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		try {
			await ctx.telegram.sendMessage(
				userId,
				`‚úÖ <b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –æ–¥–æ–±—Ä–µ–Ω–∞</b>\n\n` +
					`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥—Ä—É–ø–ø—É!`,
				{ parse_mode: 'HTML' }
			)
		} catch (notifyError) {
			console.error(
				'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:',
				notifyError
			)
		}

		await ctx.editMessageText(
			`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è—Ç –≤ –≥—Ä—É–ø–ø—É\n` + `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω`,
			{ parse_mode: 'HTML' }
		)
	} catch (error) {
		// –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ HIDE_REQUESTER_MISSING
		if (error.message.includes('HIDE_REQUESTER_MISSING')) {
			console.log(
				`‚ÑπÔ∏è –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} —É–∂–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ (–ø—Ä–∏–Ω—è—Ç–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞)`
			)

			// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, —á—Ç–æ –∑–∞—è–≤–∫–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
			await ctx.editMessageText(
				`‚ÑπÔ∏è –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ (–ø—Ä–∏–Ω—è—Ç–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞)`,
				{ parse_mode: 'HTML' }
			)
			return
		}

		// –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ USER_ALREADY_PARTICIPANT
		if (error.message.includes('USER_ALREADY_PARTICIPANT')) {
			console.log(`‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã`)

			// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ
			await ctx.editMessageText(
				`‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã`,
				{ parse_mode: 'HTML' }
			)
			return
		}

		// –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
		await ctx.editMessageText(
			`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`,
			{ parse_mode: 'HTML' }
		)
	}
}

async function handleCancelAccept(ctx) {
	await ctx.editMessageText(`‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ`, { parse_mode: 'HTML' })
}

module.exports = {
	connectToDatabase,
	checkAndCancelExpiredRequests,
	startRequestCheckTimer,
	stopRequestCheckTimer,
	handleBanButton,
	handleConfirmBan,
	handleCancelBan,
	handleAcceptButton,
	handleConfirmAccept,
	handleCancelAccept,
}
