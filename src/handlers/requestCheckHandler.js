/**
 * –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–º–µ–Ω—ã –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
 * @module handlers/requestCheckHandler
 */

const {
	ADMIN_CHAT_ID,
	LAMP_THREAD_ID,
	MONO_PITER_CHAT_ID,
	JOIN_REQUEST,
	MODULES,
} = require('../config')
const { banUser, connectToDatabase, getDb } = require('../db')

// –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
const BAN_BUTTON = 'ban_user'
const CONFIRM_BAN_BUTTON = 'confirm_ban'
const CANCEL_BAN_BUTTON = 'cancel_ban'
const ACCEPT_BUTTON = 'accept_user'
const CONFIRM_ACCEPT_BUTTON = 'confirm_accept'
const CANCEL_ACCEPT_BUTTON = 'cancel_accept'

// –¢–∞–π–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫
let checkRequestsTimer = null

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
 * @async
 * @param {Telegraf} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * @returns {Promise<Array<Object>>} –°–ø–∏—Å–æ–∫ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
 */
async function checkAndCancelExpiredRequests(bot) {
	try {
		// –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ë–î
		await connectToDatabase()
		const db = getDb()

		if (!db) {
			throw new Error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')
		}

		const joinRequestsCollection = db.collection('joinRequests')
		const now = new Date()
		const lifetimeMinutes = JOIN_REQUEST.LIFETIME_MINUTES

		// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
		const expiredRequests = await joinRequestsCollection
			.find({
				status: 'pending',
				createdAt: {
					$lt: new Date(now.getTime() - lifetimeMinutes * 60 * 1000),
				},
			})
			.toArray()

		// –û—Ç–º–µ–Ω—è–µ–º –∫–∞–∂–¥—É—é –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—É—é –∑–∞—è–≤–∫—É
		const canceledRequests = []
		for (const request of expiredRequests) {
			try {
				// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∞ –ª–∏ –∑–∞—è–≤–∫–∞ —É–∂–µ –æ—Ç–º–µ–Ω–µ–Ω–∞
				if (request.status === 'expired') {
					console.log(`‚ÑπÔ∏è –ó–∞—è–≤–∫–∞ ${request._id} —É–∂–µ –æ—Ç–º–µ–Ω–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`)
					continue
				}

				// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –≤ Telegram
				try {
					const chatMember = await bot.telegram.getChatMember(
						MONO_PITER_CHAT_ID,
						request.userId
					)

					// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
					if (chatMember.status !== 'left') {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ (—Å—Ç–∞—Ç—É—Å: ${chatMember.status})`,
								},
							}
						)
						continue
					}
				} catch (error) {
					// –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ USER_ID_INVALID
					if (error.message.includes('USER_ID_INVALID')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason:
										'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏–ª –∞–∫–∫–∞—É–Ω—Ç)',
								},
							}
						)

						// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω-–∫–∞–Ω–∞–ª
						await bot.telegram.sendMessage(
							MODULES.SPAM_DETECTION.REPORT_CHAT_ID,
							`‚ö†Ô∏è <b>–ó–∞—è–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n` +
								`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ID ${request.userId}\n` +
								`‚ùå –ü—Ä–∏—á–∏–Ω–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏–ª –∞–∫–∫–∞—É–Ω—Ç)\n` +
								`‚è± –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: ${request.createdAt.toLocaleString()}`,
							{
								message_thread_id: MODULES.SPAM_DETECTION.REPORT_THREAD_ID,
								parse_mode: 'HTML',
							}
						)
						continue
					}

					// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É user is deactivated
					if (error.message.includes('user is deactivated')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –∞–∫–∫–∞—É–Ω—Ç',
								},
							}
						)
						continue
					}

					// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É member not found
					if (error.message.includes('member not found')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥—Ä—É–ø–ø–µ',
								},
							}
						)

						// –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É –≤ Telegram –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞
						try {
							await bot.telegram.declineChatJoinRequest(
								MONO_PITER_CHAT_ID,
								request.userId
							)
							console.log(
								`‚úÖ –ó–∞—è–≤–∫–∞ ${request._id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ –≤ Telegram`
							)
							canceledRequests.push(request)
						} catch (declineError) {
							// –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏, –ª–æ–≥–∏—Ä—É–µ–º –µ–µ
							console.error(
								`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞—è–≤–∫–∏ ${request._id} –≤ Telegram:`,
								declineError.message
							)
						}

						continue
					}

					// –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
					await joinRequestsCollection.updateOne(
						{ _id: request._id },
						{
							$set: {
								status: 'expired',
								updatedAt: new Date(),
								reason: `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞: ${error.message}`,
							},
						}
					)

					// –í—Å–µ —Ä–∞–≤–Ω–æ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É –≤ Telegram
					try {
						await bot.telegram.declineChatJoinRequest(
							MONO_PITER_CHAT_ID,
							request.userId
						)
						console.log(
							`‚úÖ –ó–∞—è–≤–∫–∞ ${request._id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ –≤ Telegram, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É —Å—Ç–∞—Ç—É—Å–∞`
						)
						canceledRequests.push(request)
					} catch (declineError) {
						// –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏, –ª–æ–≥–∏—Ä—É–µ–º –µ–µ
						console.error(
							`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞—è–≤–∫–∏ ${request._id} –≤ Telegram:`,
							declineError.message
						)
					}

					continue
				}

				// –û—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ Telegram
				try {
					await bot.telegram.declineChatJoinRequest(
						MONO_PITER_CHAT_ID,
						request.userId
					)

					// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
					const result = await joinRequestsCollection.updateOne(
						{ _id: request._id },
						{
							$set: {
								status: 'expired',
								updatedAt: new Date(),
								reason: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏',
							},
						}
					)

					if (result.modifiedCount > 0) {
						canceledRequests.push(request)

						// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
						try {
							const hours = Math.floor(lifetimeMinutes / 60)
							const minutes = lifetimeMinutes % 60
							const timeFormat =
								hours > 0 ? `${hours} —á. ${minutes} –º–∏–Ω.` : `${minutes} –º–∏–Ω.`

							await bot.telegram.sendMessage(
								request.userId,
								`‚ö†Ô∏è <b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞</b>\n\n` +
									`–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ (${timeFormat})\n` +
									`–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è`,
								{ parse_mode: 'HTML' }
							)
						} catch (userNotifyError) {
							// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
							const errorType = userNotifyError.message.includes(
								'USER_ID_INVALID'
							)
								? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏–ª –∞–∫–∫–∞—É–Ω—Ç)'
								: userNotifyError.message.includes(
										'bot was blocked by the user'
								  )
								? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞'
								: userNotifyError.message.includes('user is deactivated')
								? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –∞–∫–∫–∞—É–Ω—Ç'
								: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'

							// –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏
							if (
								!userNotifyError.message.includes(
									'bot was blocked by the user'
								) &&
								!userNotifyError.message.includes('USER_ID_INVALID') &&
								!userNotifyError.message.includes('user is deactivated')
							) {
								console.error(
									`‚ùå –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${request.userId}:`,
									userNotifyError
								)
							} else {
								console.log(
									`‚ÑπÔ∏è –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${request.userId}: ${errorType}`
								)
							}

							// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π –ø—Ä–∏—á–∏–Ω–æ–π
							await joinRequestsCollection.updateOne(
								{ _id: request._id },
								{
									$set: {
										status: 'expired',
										updatedAt: new Date(),
										reason: `–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ (${errorType})`,
									},
								}
							)
						}

						// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω-–∫–∞–Ω–∞–ª
						const adminHours = Math.floor(lifetimeMinutes / 60)
						const adminMinutes = lifetimeMinutes % 60
						const adminTimeFormat =
							adminHours > 0
								? `${adminHours} —á. ${adminMinutes} –º–∏–Ω.`
								: `${adminMinutes} –º–∏–Ω.`

						await bot.telegram.sendMessage(
							MODULES.SPAM_DETECTION.REPORT_CHAT_ID,
							`‚ö†Ô∏è <b>–ó–∞—è–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n` +
								`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href="tg://user?id=${request.userId}">${
									request.username || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'
								}</a>\n` +
								`‚è± –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: ${request.createdAt.toLocaleString()}\n` +
								`‚è≥ –í—Ä–µ–º—è –∂–∏–∑–Ω–∏: ${adminTimeFormat}`,
							{
								message_thread_id: MODULES.SPAM_DETECTION.REPORT_THREAD_ID,
								parse_mode: 'HTML',
							}
						)
					}
				} catch (error) {
					// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É HIDE_REQUESTER_MISSING
					if (error.message.includes('HIDE_REQUESTER_MISSING')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason: '–ó–∞—è–≤–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞',
								},
							}
						)
						continue
					}

					// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É member not found
					if (error.message.includes('member not found')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason: '–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ Telegram',
								},
							}
						)
						continue
					}

					// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É USER_ID_INVALID
					if (error.message.includes('USER_ID_INVALID')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason:
										'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏–ª –∞–∫–∫–∞—É–Ω—Ç)',
								},
							}
						)
						continue
					}

					// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É user is deactivated
					if (error.message.includes('user is deactivated')) {
						// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						await joinRequestsCollection.updateOne(
							{ _id: request._id },
							{
								$set: {
									status: 'expired',
									updatedAt: new Date(),
									reason: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –∞–∫–∫–∞—É–Ω—Ç',
								},
							}
						)
						continue
					}

					// –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω-–∫–∞–Ω–∞–ª
					console.error(
						`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞—è–≤–∫–∏ ${request._id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${request.userId}:`,
						error.message
					)

					await bot.telegram.sendMessage(
						MODULES.SPAM_DETECTION.REPORT_CHAT_ID,
						`‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞—è–≤–∫–∏</b>\n\n` +
							`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href="tg://user?id=${request.userId}">${
								request.username || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'
							}</a>\n` +
							`‚ùå –û—à–∏–±–∫–∞: ${error.message}`,
						{
							message_thread_id: MODULES.SPAM_DETECTION.REPORT_THREAD_ID,
							parse_mode: 'HTML',
						}
					)
				}
			} catch (error) {
				// –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
				if (
					!error.message.includes('HIDE_REQUESTER_MISSING') &&
					!error.message.includes('user is deactivated')
				) {
					console.error(
						`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${request.userId}:`,
						error
					)
				}
			}
		}

		return canceledRequests
	} catch (error) {
		console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–æ–∫:', error)
		return []
	}
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–æ–∫
 * @param {Telegraf} botInstance - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
function startRequestCheckTimer(botInstance) {
	try {
		// –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
		if (checkRequestsTimer) {
			console.log('–¢–∞–π–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫ —É–∂–µ –∑–∞–ø—É—â–µ–Ω, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º')
			clearInterval(checkRequestsTimer)
		}

		// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
		checkRequestsTimer = setInterval(async () => {
			try {
				// –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–æ–∫
				await checkAndCancelExpiredRequests(botInstance)
			} catch (error) {
				console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–æ–∫:', error)
			}
		}, JOIN_REQUEST.CHECK_INTERVAL_MINUTES * 60 * 1000)

		console.log(
			`‚úÖ –¢–∞–π–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫ –∑–∞–ø—É—â–µ–Ω —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º ${JOIN_REQUEST.CHECK_INTERVAL_MINUTES} –º–∏–Ω—É—Ç`
		)
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫:', error)
	}
}

/**
 * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–∞–π–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫
 */
function stopRequestCheckTimer() {
	if (checkRequestsTimer) {
		clearInterval(checkRequestsTimer)
		checkRequestsTimer = null
		console.log('‚úÖ –¢–∞–π–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
	}
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –±–∞–Ω–∞
async function handleBanButton(ctx) {
	const userId = ctx.callbackQuery.data.split(':')[1]

	try {
		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		const message = ctx.callbackQuery.message

		// –ï—Å–ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥
		if (message.video_note) {
			// –ü–æ–ª—É—á–∞–µ–º ID –≤–∏–¥–µ–æ-–∫—Ä—É–∂–∫–∞
			const videoNoteFileId = message.video_note.file_id

			// –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
			const userName = message.from
				? `${message.from.first_name} ${message.from.last_name || ''}`
				: '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
			const text = `üìπ –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${userName}`

			// –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
			await ctx.deleteMessage()

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—Ä—É–∂–æ–∫
			await ctx.telegram.sendVideoNote(message.chat.id, videoNoteFileId)

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
			await ctx.telegram.sendMessage(message.chat.id, text, {
				parse_mode: 'HTML',
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: '‚ùå –ó–∞–±–∞–Ω–∏—Ç—å',
								callback_data: `${CONFIRM_BAN_BUTTON}:${userId}`,
							},
							{
								text: '‚úÖ –û—Ç–º–µ–Ω–∞',
								callback_data: `${CANCEL_BAN_BUTTON}:${userId}`,
							},
						],
					],
				},
			})

			return
		}

		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
		let currentText = message.text || message.caption || ''

		// –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–ø–µ –º–µ–¥–∏–∞
		if (!currentText) {
			if (message.video) {
				currentText = 'üìπ –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.photo) {
				currentText = 'üñº –§–æ—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.voice) {
				currentText = 'üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.audio) {
				currentText = 'üéµ –ê—É–¥–∏–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.document) {
				currentText = 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç'
			} else {
				currentText = 'üìù –°–æ–æ–±—â–µ–Ω–∏–µ'
			}

			// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
			if (message.from) {
				currentText += ` –æ—Ç ${message.from.first_name} ${
					message.from.last_name || ''
				}`
			}
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –º–µ–¥–∏–∞
		if (
			message.photo ||
			message.video ||
			message.document ||
			message.audio ||
			message.voice
		) {
			// –î–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å –º–µ–¥–∏–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageCaption
			await ctx.editMessageCaption(currentText, {
				parse_mode: 'HTML',
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: '‚ùå –ó–∞–±–∞–Ω–∏—Ç—å',
								callback_data: `${CONFIRM_BAN_BUTTON}:${userId}`,
							},
							{
								text: '‚úÖ –û—Ç–º–µ–Ω–∞',
								callback_data: `${CANCEL_BAN_BUTTON}:${userId}`,
							},
						],
					],
				},
			})
		} else {
			// –î–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageText
			await ctx.editMessageText(currentText, {
				parse_mode: 'HTML',
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: '‚ùå –ó–∞–±–∞–Ω–∏—Ç—å',
								callback_data: `${CONFIRM_BAN_BUTTON}:${userId}`,
							},
							{
								text: '‚úÖ –û—Ç–º–µ–Ω–∞',
								callback_data: `${CANCEL_BAN_BUTTON}:${userId}`,
							},
						],
					],
				},
			})
		}
	} catch (error) {
		console.error(
			'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±–∞–Ω–∞:',
			error
		)
		// –°–æ–æ–±—â–∞–µ–º –æ –ø—Ä–æ–±–ª–µ–º–µ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
		await ctx.answerCbQuery('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ' + error.message)
	}
}

async function handleConfirmBan(ctx) {
	const userId = ctx.callbackQuery.data.split(':')[1]

	try {
		// –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		const message = ctx.callbackQuery.message

		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
		let originalText = message.text || message.caption || ''

		// –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–ø–µ –º–µ–¥–∏–∞
		if (!originalText) {
			if (message.video) {
				originalText = 'üìπ –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.photo) {
				originalText = 'üñº –§–æ—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.video_note) {
				originalText = '‚ö™ –í–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫'
			} else if (message.voice) {
				originalText = 'üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.audio) {
				originalText = 'üéµ –ê—É–¥–∏–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.document) {
				originalText = 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç'
			} else {
				originalText = 'üìù –°–æ–æ–±—â–µ–Ω–∏–µ'
			}

			// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
			if (message.from) {
				originalText += ` –æ—Ç ${message.from.first_name} ${
					message.from.last_name || ''
				}`
			}
		}

		// –í—ã–≤–æ–¥–∏–º –≤ –ª–æ–≥ –¥–ª—è –¥–µ–±–∞–≥–∞
		console.log('–¢–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –±–∞–Ω–æ–º:', originalText)

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–µ
		let userIsAlreadyBanned = false
		let userInfo = `ID: ${userId}`

		try {
			const chatMember = await ctx.telegram.getChatMember(
				MONO_PITER_CHAT_ID,
				userId
			)

			// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
			userInfo = `<a href="tg://user?id=${userId}">${
				chatMember.user.first_name
			} ${chatMember.user.last_name || ''}</a>`

			// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –≤—ã—Ö–æ–¥–∏–º
			if (chatMember.status === 'kicked') {
				userIsAlreadyBanned = true
				const banText = `\n\n‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userInfo} —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –≥—Ä—É–ø–ø–µ`
				const newText = originalText + banText

				// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è—è –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
				if (
					message.photo ||
					message.video ||
					message.document ||
					message.audio ||
					message.voice ||
					message.video_note
				) {
					await ctx.editMessageCaption(newText, { parse_mode: 'HTML' })
				} else {
					await ctx.editMessageText(newText, { parse_mode: 'HTML' })
				}
				return
			}
		} catch (error) {
			// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥—Ä—É–ø–ø–µ, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
			if (!error.message.includes('user not found')) {
				throw error
			}
		}

		if (userIsAlreadyBanned) return

		// –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É
		try {
			await ctx.telegram.declineChatJoinRequest(MONO_PITER_CHAT_ID, userId)
		} catch (declineError) {
			// –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ HIDE_REQUESTER_MISSING, –∑–Ω–∞—á–∏—Ç –∑–∞—è–≤–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞
			// –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è
			if (!declineError.message.includes('HIDE_REQUESTER_MISSING')) {
				throw declineError
			}
		}

		// –ó–∞—Ç–µ–º –±–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		await ctx.telegram.banChatMember(MONO_PITER_CHAT_ID, userId)

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–Ω–µ –≤ –ë–î
		await banUser(userId, ctx.from.id, '–ó–∞–±–∞–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')

		// –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		try {
			await ctx.telegram.sendMessage(
				userId,
				`‚ö†Ô∏è <b>–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –≥—Ä—É–ø–ø–µ</b>\n`,
				{ parse_mode: 'HTML' }
			)
		} catch (notifyError) {
			// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è
			if (!notifyError.message.includes('bot was blocked by the user')) {
				console.error(
					'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:',
					notifyError
				)
			}
		}

		// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫—Ç–æ –∑–∞–±–∞–Ω–∏–ª
		const adminInfo = `<a href="tg://user?id=${ctx.from.id}">${
			ctx.from.first_name
		} ${ctx.from.last_name || ''}</a>`

		// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–Ω–µ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
		const banText =
			`\n\n‚ùå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userInfo} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –≥—Ä—É–ø–ø–µ</b>\n` +
			`–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω\n` +
			`üëÆ‚Äç‚ôÇÔ∏è –ó–∞–±–∞–Ω–∏–ª: ${adminInfo}`

		const newText = originalText + banText

		// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è—è –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
		if (
			message.photo ||
			message.video ||
			message.document ||
			message.audio ||
			message.voice ||
			message.video_note
		) {
			// –î–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å –º–µ–¥–∏–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageCaption
			await ctx.editMessageCaption(newText, {
				parse_mode: 'HTML',
			})
		} else {
			// –î–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageText
			await ctx.editMessageText(newText, {
				parse_mode: 'HTML',
			})
		}
	} catch (error) {
		// –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
		const message = ctx.callbackQuery.message
		let originalText = message.text || message.caption || ''

		// –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–ø–µ –º–µ–¥–∏–∞
		if (!originalText) {
			if (message.video) {
				originalText = 'üìπ –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.photo) {
				originalText = 'üñº –§–æ—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.video_note) {
				originalText = '‚ö™ –í–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫'
			} else if (message.voice) {
				originalText = 'üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.audio) {
				originalText = 'üéµ –ê—É–¥–∏–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.document) {
				originalText = 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç'
			} else {
				originalText = 'üìù –°–æ–æ–±—â–µ–Ω–∏–µ'
			}

			// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
			if (message.from) {
				originalText += ` –æ—Ç ${message.from.first_name} ${
					message.from.last_name || ''
				}`
			}
		}

		// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
		const errorText = `\n\n‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> ${error.message}`
		const newText = originalText + errorText

		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)

		// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è—è –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
		try {
			if (
				message.photo ||
				message.video ||
				message.document ||
				message.audio ||
				message.voice ||
				message.video_note
			) {
				// –î–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å –º–µ–¥–∏–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageCaption
				await ctx.editMessageCaption(newText, {
					parse_mode: 'HTML',
				})
			} else {
				// –î–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageText
				await ctx.editMessageText(newText, {
					parse_mode: 'HTML',
				})
			}
		} catch (updateError) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—à–∏–±–∫–æ–π:', updateError)
		}
	}
}

async function handleCancelBan(ctx) {
	try {
		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		const message = ctx.callbackQuery.message

		// –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ callback_data
		const userId = ctx.callbackQuery.data.split(':')[1]

		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
		let currentText = message.text || message.caption || ''

		// –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–ø–µ –º–µ–¥–∏–∞
		if (!currentText) {
			if (message.video) {
				currentText = 'üìπ –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.photo) {
				currentText = 'üñº –§–æ—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.voice) {
				currentText = 'üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.audio) {
				currentText = 'üéµ –ê—É–¥–∏–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.document) {
				currentText = 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç'
			} else {
				currentText = 'üìù –°–æ–æ–±—â–µ–Ω–∏–µ'
			}

			// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
			if (message.from) {
				currentText += ` –æ—Ç ${message.from.first_name} ${
					message.from.last_name || ''
				}`
			}
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –º–µ–¥–∏–∞
		if (
			message.photo ||
			message.video ||
			message.document ||
			message.audio ||
			message.voice
		) {
			// –î–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å –º–µ–¥–∏–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageCaption
			await ctx.editMessageCaption(currentText, {
				parse_mode: 'HTML',
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: '‚ùå –ë–∞–Ω',
								callback_data: `${BAN_BUTTON}:${userId}`,
							},
						],
						[
							{
								text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å',
								callback_data: `ask_${userId}`,
							},
						],
					],
				},
			})
		} else {
			// –î–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageText
			await ctx.editMessageText(currentText, {
				parse_mode: 'HTML',
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å',
								callback_data: `ask_${userId}`,
							},
							{
								text: '‚ùå –ë–∞–Ω',
								callback_data: `${BAN_BUTTON}:${userId}`,
							},
						],
					],
				},
			})
		}

		await ctx.answerCbQuery('–û—Ç–º–µ–Ω–µ–Ω–æ')
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –±–∞–Ω–∞:', error)
		await ctx.answerCbQuery('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ: ' + error.message)
	}
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏–Ω—è—Ç–∏—è
async function handleAcceptButton(ctx) {
	const userId = ctx.callbackQuery.data.split(':')[1]

	try {
		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		const message = ctx.callbackQuery.message

		// –ï—Å–ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥
		if (message.video_note) {
			// –ü–æ–ª—É—á–∞–µ–º ID –≤–∏–¥–µ–æ-–∫—Ä—É–∂–∫–∞
			const videoNoteFileId = message.video_note.file_id

			// –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
			const userName = message.from
				? `${message.from.first_name} ${message.from.last_name || ''}`
				: '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
			const text = `üìπ –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${userName}`

			// –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
			await ctx.deleteMessage()

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—Ä—É–∂–æ–∫
			await ctx.telegram.sendVideoNote(message.chat.id, videoNoteFileId)

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
			await ctx.telegram.sendMessage(message.chat.id, text, {
				parse_mode: 'HTML',
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: '‚úÖ –ü—Ä–∏–Ω—è—Ç—å',
								callback_data: `${CONFIRM_ACCEPT_BUTTON}:${userId}`,
							},
							{
								text: '‚ùå –û—Ç–º–µ–Ω–∞',
								callback_data: `${CANCEL_ACCEPT_BUTTON}:${userId}`,
							},
						],
					],
				},
			})

			return
		}

		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
		let currentText = message.text || message.caption || ''

		// –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–ø–µ –º–µ–¥–∏–∞
		if (!currentText) {
			if (message.video) {
				currentText = 'üìπ –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.photo) {
				currentText = 'üñº –§–æ—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.voice) {
				currentText = 'üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.audio) {
				currentText = 'üéµ –ê—É–¥–∏–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.document) {
				currentText = 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç'
			} else {
				currentText = 'üìù –°–æ–æ–±—â–µ–Ω–∏–µ'
			}

			// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
			if (message.from) {
				currentText += ` –æ—Ç ${message.from.first_name} ${
					message.from.last_name || ''
				}`
			}
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –º–µ–¥–∏–∞
		if (
			message.photo ||
			message.video ||
			message.document ||
			message.audio ||
			message.voice
		) {
			// –î–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å –º–µ–¥–∏–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageCaption
			await ctx.editMessageCaption(currentText, {
				parse_mode: 'HTML',
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: '‚úÖ –ü—Ä–∏–Ω—è—Ç—å',
								callback_data: `${CONFIRM_ACCEPT_BUTTON}:${userId}`,
							},
							{
								text: '‚ùå –û—Ç–º–µ–Ω–∞',
								callback_data: `${CANCEL_ACCEPT_BUTTON}:${userId}`,
							},
						],
					],
				},
			})
		} else {
			// –î–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageText
			await ctx.editMessageText(currentText, {
				parse_mode: 'HTML',
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: '‚úÖ –ü—Ä–∏–Ω—è—Ç—å',
								callback_data: `${CONFIRM_ACCEPT_BUTTON}:${userId}`,
							},
							{
								text: '‚ùå –û—Ç–º–µ–Ω–∞',
								callback_data: `${CANCEL_ACCEPT_BUTTON}:${userId}`,
							},
						],
					],
				},
			})
		}
	} catch (error) {
		console.error(
			'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç–∏—è:',
			error
		)
		// –°–æ–æ–±—â–∞–µ–º –æ –ø—Ä–æ–±–ª–µ–º–µ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
		await ctx.answerCbQuery('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ' + error.message)
	}
}

async function handleConfirmAccept(ctx) {
	const userId = ctx.callbackQuery.data.split(':')[1]

	try {
		// –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		const message = ctx.callbackQuery.message

		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
		let originalText = message.text || message.caption || ''

		// –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–ø–µ –º–µ–¥–∏–∞
		if (!originalText) {
			if (message.video) {
				originalText = 'üìπ –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.photo) {
				originalText = 'üñº –§–æ—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.video_note) {
				originalText = '‚ö™ –í–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫'
			} else if (message.voice) {
				originalText = 'üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.audio) {
				originalText = 'üéµ –ê—É–¥–∏–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.document) {
				originalText = 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç'
			} else {
				originalText = 'üìù –°–æ–æ–±—â–µ–Ω–∏–µ'
			}

			// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
			if (message.from) {
				originalText += ` –æ—Ç ${message.from.first_name} ${
					message.from.last_name || ''
				}`
			}
		}

		// –í—ã–≤–æ–¥–∏–º –≤ –ª–æ–≥ –¥–ª—è –¥–µ–±–∞–≥–∞
		console.log('–¢–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º:', originalText)

		// –ü—Ä–∏–Ω–∏–º–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É
		await ctx.telegram.approveChatJoinRequest(MONO_PITER_CHAT_ID, userId)

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		try {
			await ctx.telegram.sendMessage(
				userId,
				`‚úÖ <b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –æ–¥–æ–±—Ä–µ–Ω–∞</b>\n\n` +
					`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥—Ä—É–ø–ø—É!`,
				{ parse_mode: 'HTML' }
			)
		} catch (notifyError) {
			console.error(
				'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:',
				notifyError
			)
		}

		// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
		const acceptText =
			'\n\n‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è—Ç –≤ –≥—Ä—É–ø–ø—É. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω.</b>'
		const newText = originalText + acceptText

		// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è—è –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
		if (
			message.photo ||
			message.video ||
			message.document ||
			message.audio ||
			message.voice ||
			message.video_note
		) {
			// –î–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å –º–µ–¥–∏–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageCaption
			await ctx.editMessageCaption(newText, {
				parse_mode: 'HTML',
			})
		} else {
			// –î–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageText
			await ctx.editMessageText(newText, {
				parse_mode: 'HTML',
			})
		}
	} catch (error) {
		// –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
		const message = ctx.callbackQuery.message
		let originalText = message.text || message.caption || ''

		// –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–ø–µ –º–µ–¥–∏–∞
		if (!originalText) {
			if (message.video) {
				originalText = 'üìπ –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.photo) {
				originalText = 'üñº –§–æ—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.video_note) {
				originalText = '‚ö™ –í–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫'
			} else if (message.voice) {
				originalText = 'üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.audio) {
				originalText = 'üéµ –ê—É–¥–∏–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.document) {
				originalText = 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç'
			} else {
				originalText = 'üìù –°–æ–æ–±—â–µ–Ω–∏–µ'
			}

			// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
			if (message.from) {
				originalText += ` –æ—Ç ${message.from.first_name} ${
					message.from.last_name || ''
				}`
			}
		}

		let errorText = ''

		// –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ HIDE_REQUESTER_MISSING
		if (error.message.includes('HIDE_REQUESTER_MISSING')) {
			console.log(
				`‚ÑπÔ∏è –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} —É–∂–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ (–ø—Ä–∏–Ω—è—Ç–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞)`
			)
			errorText =
				'\n\n‚ÑπÔ∏è <b>–ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ (–ø—Ä–∏–Ω—è—Ç–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞)</b>'
		}
		// –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ USER_ALREADY_PARTICIPANT
		else if (error.message.includes('USER_ALREADY_PARTICIPANT')) {
			console.log(`‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã`)
			errorText = '\n\n‚ÑπÔ∏è <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã</b>'
		}
		// –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
		else {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
			errorText = `\n\n‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> ${error.message}`
		}

		// –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É
		const newText = originalText + errorText

		// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è—è –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
		try {
			if (
				message.photo ||
				message.video ||
				message.document ||
				message.audio ||
				message.voice ||
				message.video_note
			) {
				// –î–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å –º–µ–¥–∏–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageCaption
				await ctx.editMessageCaption(newText, {
					parse_mode: 'HTML',
				})
			} else {
				// –î–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageText
				await ctx.editMessageText(newText, {
					parse_mode: 'HTML',
				})
			}
		} catch (updateError) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—à–∏–±–∫–æ–π:', updateError)
		}
	}
}

async function handleCancelAccept(ctx) {
	// –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ callback_data
	const userId = ctx.callbackQuery.data.split(':')[1]

	try {
		// –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		const message = ctx.callbackQuery.message

		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
		let originalText = message.text || message.caption || ''

		// –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∏–ø–µ –º–µ–¥–∏–∞
		if (!originalText) {
			if (message.video) {
				originalText = 'üìπ –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.photo) {
				originalText = 'üñº –§–æ—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.video_note) {
				originalText = '‚ö™ –í–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫'
			} else if (message.voice) {
				originalText = 'üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.audio) {
				originalText = 'üéµ –ê—É–¥–∏–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ'
			} else if (message.document) {
				originalText = 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç'
			} else {
				originalText = 'üìù –°–æ–æ–±—â–µ–Ω–∏–µ'
			}

			// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
			if (message.from) {
				originalText += ` –æ—Ç ${message.from.first_name} ${
					message.from.last_name || ''
				}`
			}
		}

		// –í—ã–≤–æ–¥–∏–º –≤ –ª–æ–≥ –¥–ª—è –¥–µ–±–∞–≥–∞
		console.log('–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:', originalText)

		// –î–ª—è –ª—é–±–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–Ω—è—Ç—å" –∏ "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"
		const keyboard = [
			[{ text: '‚úÖ –ü—Ä–∏–Ω—è—Ç—å', callback_data: `${ACCEPT_BUTTON}:${userId}` }],
			[{ text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: `ask_${userId}` }],
		]

		// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
		if (
			message.photo ||
			message.video ||
			message.document ||
			message.audio ||
			message.voice ||
			message.video_note
		) {
			// –î–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å –º–µ–¥–∏–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageCaption
			await ctx.editMessageCaption(originalText, {
				parse_mode: 'HTML',
				reply_markup: {
					inline_keyboard: keyboard,
				},
			})
		} else {
			// –î–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º editMessageText
			await ctx.editMessageText(originalText, {
				parse_mode: 'HTML',
				reply_markup: {
					inline_keyboard: keyboard,
				},
			})
		}
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø—Ä–∏–Ω—è—Ç–∏—è:', error)
		// –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
		await ctx.editMessageText(`‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ`, { parse_mode: 'HTML' })
	}
}

module.exports = {
	checkAndCancelExpiredRequests,
	startRequestCheckTimer,
	stopRequestCheckTimer,
	handleBanButton,
	handleConfirmBan,
	handleCancelBan,
	handleAcceptButton,
	handleConfirmAccept,
	handleCancelAccept,
}
