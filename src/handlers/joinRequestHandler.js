/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —á–∞—Ç
 * @module joinRequestHandler
 */

const { sendTelegramMessage } = require('../utils/messaging');
const { logError, isUserAccessError, formatUserAccessError } = require('../utils/errorHandler');
const { 
  getJoinRequestByUserId,
  addMessageToJoinRequest,
  updateJoinRequestStatusWithData
} = require('../db');
const { ADMIN_CHAT_ID, LAMP_THREAD_ID, MONO_PITER_CHAT_ID } = require('../config');

/**
 * –•—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–∂–∏–¥–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
 * @type {Map<string, Object>}
 */
const pendingQuestions = new Map();

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
 * @async
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegraf
 * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –∑–∞–¥–∞–µ—Ç—Å—è –≤–æ–ø—Ä–æ—Å
 */
async function handleAskQuestion(bot, ctx, userId) {
  try {
    console.log(`‚ùì –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    
    // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ userId - —ç—Ç–æ —á–∏—Å–ª–æ
    const userIdNum = parseInt(userId, 10);
    if (isNaN(userIdNum)) {
      console.error(`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userId}`);
      return await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const joinRequest = await getJoinRequestByUserId(userIdNum);
    console.log('üìÑ –î–∞–Ω–Ω—ã–µ –æ –∑–∞—è–≤–∫–µ:', joinRequest ? '–ù–∞–π–¥–µ–Ω—ã' : '–ù–µ –Ω–∞–π–¥–µ–Ω—ã');
    
    if (!joinRequest) {
      console.error(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userIdNum} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞—è–≤–∫–∞—Ö`);
      return await ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∑–∞–ø—Ä–æ—Å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
    }
    
    const userInfo = `${joinRequest.firstName} ${joinRequest.lastName || ''}`;
    console.log(`üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: ${userInfo}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminId = ctx.from.id;
    let activeRequestsForAdmin = 0;
    
    for (const [key, data] of pendingQuestions.entries()) {
      if (data.adminId === adminId) {
        activeRequestsForAdmin++;
      }
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º
    const message = `<b>–í–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userInfo} (ID: ${userIdNum})</b>

<i>–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.</i>

${activeRequestsForAdmin > 0 ? 
`<b>‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å ${activeRequestsForAdmin} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤. </b>
–ï—Å–ª–∏ –±—É–¥–µ—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å, –≤ –Ω–∞—á–∞–ª–µ –æ—Ç–≤–µ—Ç–∞ —É–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
<code>${userIdNum}: –í–∞—à –≤–æ–ø—Ä–æ—Å</code>` : ''}

–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel –≤ –≤–∞—à–µ–º –æ—Ç–≤–µ—Ç–µ.`;
    
    let sentMsg;
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞ —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
      sentMsg = await ctx.reply(message, {
        reply_markup: {
          force_reply: true,
          selective: true
        },
        parse_mode: 'HTML'
      });
      
      console.log('üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞, ID —Å–æ–æ–±—â–µ–Ω–∏—è:', sentMsg.message_id);
    } catch (error) {
      await logError(bot, error, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞', {
        userId: adminId, 
        functionName: 'handleAskQuestion'
      });
      
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
        .catch(replyError => console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', replyError));
      
      return;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ –≤ –ø–∞–º—è—Ç–∏
    const requestKey = `${ctx.from.id}_${sentMsg.message_id}`;
    pendingQuestions.set(requestKey, {
      userId: userIdNum, 
      adminId: ctx.from.id,
      messageId: sentMsg.message_id,
      timestamp: Date.now()
    });
    
    console.log('üîë –°–æ—Ö—Ä–∞–Ω–µ–Ω –∫–ª—é—á –∑–∞–ø—Ä–æ—Å–∞:', requestKey);
    console.log('üìã –¢–µ–∫—É—â–∏–µ –æ–∂–∏–¥–∞—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:', Array.from(pendingQuestions.keys()));
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º-–∞—É—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç
    setTimeout(() => {
      if (pendingQuestions.has(requestKey)) {
        console.log(`‚è±Ô∏è –ò—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ ${requestKey}`);
        pendingQuestions.delete(requestKey);
        try {
          ctx.reply(`–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userInfo} (ID: ${userIdNum}) –∏—Å—Ç–µ–∫–ª–æ. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å" —Å–Ω–æ–≤–∞.`);
        } catch (e) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ç–∞–π–º–∞—É—Ç–µ:', e);
        }
      }
    }, 30 * 60 * 1000); // 30 –º–∏–Ω—É—Ç
    
    console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—Ä–æ—Å–∞ –≤–æ–ø—Ä–æ—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    await logError(bot, error, '–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≤–æ–ø—Ä–æ—Å–∞', {
      userId: ctx.from?.id,
      functionName: 'handleAskQuestion'
    });
    
    try {
      await ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≤–æ–ø—Ä–æ—Å–∞: ' + error.message);
    } catch (replyError) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', replyError);
    }
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–æ–ø—Ä–æ—Å –æ—Ç –∞–¥–º–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * @async
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegraf
 * @returns {Promise<boolean>} - –ë—ã–ª–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–∞–∫ –≤–æ–ø—Ä–æ—Å
 */
 /**
  * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–æ–ø—Ä–æ—Å –æ—Ç –∞–¥–º–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  * @async
  * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
  * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegraf
  * @returns {Promise<boolean>} - –ë—ã–ª–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–∞–∫ –≤–æ–ø—Ä–æ—Å
  */
 async function sendAdminQuestion(bot, ctx) {
   try {
     // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
     if (!ctx.message || !ctx.message.reply_to_message) {
       return false;
     }
     
     console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å –≤–æ–ø—Ä–æ—Å–∞');
     
     // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –µ–≥–æ —Ç–µ–∫—É—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
     const adminId = ctx.from.id;
     console.log(`üëÆ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${adminId}`);
     
     // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –æ–∂–∏–¥–∞—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã —ç—Ç–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
     let foundUserIds = [];
     
     for (const [key, data] of pendingQuestions.entries()) {
       if (data.adminId === adminId) {
         foundUserIds.push(data.userId);
         console.log(`üîé –ù–∞–π–¥–µ–Ω –æ–∂–∏–¥–∞—é—â–∏–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${data.userId}`);
       }
     }
     
     if (foundUserIds.length === 0) {
       console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –æ–∂–∏–¥–∞—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
       return false;
     }
     
     // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ–∂–∏–¥–∞—é—â–∏–π –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
     // –ï—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —É–∫–∞–∑–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     let targetUserId;
     
     if (foundUserIds.length === 1) {
       targetUserId = foundUserIds[0];
       console.log(`‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${targetUserId}`);
     } else {
       // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É–∫–∞–∑–∞–Ω –ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—Å—Ç–µ –æ—Ç–≤–µ—Ç–∞
       const question = ctx.message.text || '';
       const userIdMatch = question.match(/^(\d+):/);
       
       if (userIdMatch) {
         const parsedId = parseInt(userIdMatch[1], 10);
         if (foundUserIds.includes(parsedId)) {
           targetUserId = parsedId;
           // –£–¥–∞–ª—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
           ctx.message.text = question.replace(/^\d+:\s*/, '');
           console.log(`‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–µ–∫—Å—Ç–∞: ${targetUserId}`);
         } else {
           await ctx.reply(`‚ùå ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${parsedId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤–∞—à–∏—Ö —Ç–µ–∫—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.
 –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤–æ–ø—Ä–æ—Å–æ–≤: ${foundUserIds.join(', ')}`);
           return true;
         }
       } else {
         await ctx.reply(`‚ùì –£ –≤–∞—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
 <ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>: –≤–∞—à –≤–æ–ø—Ä–æ—Å
 
 –ù–∞–ø—Ä–∏–º–µ—Ä: ${foundUserIds[0]}: –ö–∞–∫–∞—è —É –≤–∞—Å –º–æ–¥–µ–ª—å –º–æ–Ω–æ–∫–æ–ª–µ—Å–∞?
 
 –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤–æ–ø—Ä–æ—Å–æ–≤: ${foundUserIds.join(', ')}`);
         return true;
       }
     }
     
     // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
     const joinRequest = await getJoinRequestByUserId(targetUserId);
     if (!joinRequest) {
       console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${targetUserId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞—è–≤–∫–∞—Ö`);
       await ctx.reply(`–ó–∞—è–≤–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${targetUserId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.`);
       
       // –û—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–ø—Ä–æ—Å—ã
       for (const [key, data] of pendingQuestions.entries()) {
         if (data.userId === targetUserId) {
           pendingQuestions.delete(key);
           console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∑–∞–ø—Ä–æ—Å: ${key}`);
         }
       }
       
       return true;
     }
     
     // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
     const question = ctx.message.text;
     
     if (!question || question.trim() === '') {
       await ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞.');
       return true;
     }
     
     // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É –æ—Ç–º–µ–Ω—ã
     if (question === '/cancel') {
       // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
       for (const [key, data] of pendingQuestions.entries()) {
         if (data.userId === targetUserId && data.adminId === adminId) {
           pendingQuestions.delete(key);
         }
       }
       
       await ctx.reply('‚ùå –ó–∞–ø—Ä–æ—Å –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç–º–µ–Ω–µ–Ω.');
       return true;
     }
     
     console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}: ${question}`);
     
     // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
     const messageSent = await sendTelegramMessage(bot, targetUserId, `–í–æ–ø—Ä–æ—Å –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${question}`);
     
     // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
     if (messageSent === null) {
       // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (null), –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –≤–µ—Ä–æ—è—Ç–Ω–æ, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞
       console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId} - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –≤–µ—Ä–æ—è—Ç–Ω–æ, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞`);
       await ctx.reply(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${joinRequest.firstName} ${joinRequest.lastName || ""} (ID: ${targetUserId}).
 –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –≤–µ—Ä–æ—è—Ç–Ω–æ, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É.`);
       
       // –û—á–∏—â–∞–µ–º –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
       for (const [key, data] of pendingQuestions.entries()) {
         if (data.userId === targetUserId && data.adminId === adminId) {
           pendingQuestions.delete(key);
           console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω –∫–ª—é—á –∑–∞–ø—Ä–æ—Å–∞: ${key}`);
         }
       }
       
       return true;
     }
     
     // –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
     // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞
     await addMessageToJoinRequest(targetUserId, question, 'admin');
     
     // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
     await ctx.reply(`‚úÖ –í–æ–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${joinRequest.firstName} ${joinRequest.lastName || ""} (ID: ${targetUserId}). –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç.`);
     
     // –û—á–∏—â–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ pendingQuestions
     for (const [key, data] of pendingQuestions.entries()) {
       if (data.userId === targetUserId && data.adminId === adminId) {
         pendingQuestions.delete(key);
         console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω –∫–ª—é—á –∑–∞–ø—Ä–æ—Å–∞: ${key}`);
       }
     }
     
     console.log('üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è –æ–∂–∏–¥–∞—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:', Array.from(pendingQuestions.keys()));
     
     return true;
   } catch (error) {
     console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–æ–ø—Ä–æ—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
     await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–æ–ø—Ä–æ—Å–∞: ' + error.message);
     return true;
   }
 }

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 * @async
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegraf
 * @returns {Promise<boolean>} - –ë—ã–ª–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
 */
async function handleUserReply(bot, ctx) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –≤ –ª–∏—á–∫—É –±–æ—Ç—É
  if (ctx.message.chat.type !== 'private') {
    return false;
  }
  
  const userId = ctx.from.id;
  
  try {
    console.log(`üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—è–≤–∫–µ
    let joinRequest = null;
    try {
      joinRequest = await getJoinRequestByUserId(userId);
    } catch (dbError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞—è–≤–∫–µ:', dbError);
      return false; // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ë–î –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–ª—å—à–µ
    }
    
    if (!joinRequest) {
      console.log(`‚ùå –ó–∞—è–≤–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      return false; // –ù–µ—Ç –∑–∞—è–≤–∫–∏
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
    if (joinRequest.status !== 'pending') {
      console.log(`‚ö†Ô∏è –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å: ${joinRequest.status}`);
      
      // –î–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      if (joinRequest.status === 'rejected') {
        await sendTelegramMessage(
          bot,
          userId,
          '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Ä–∞–Ω–µ–µ. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω—É—é –≥—Ä—É–ø–ø—É.'
        );
        return true; // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
      }
      
      return false; // –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    }
    
    const message = ctx.message.text || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –º–µ–¥–∏–∞-—Ñ–∞–π–ª';
    console.log(`üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${message.substring(0, 50)}${message.length > 50 ? '...' : ''}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞
    try {
      await addMessageToJoinRequest(userId, message, 'user');
    } catch (dbError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ë–î:', dbError);
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userLink = `<a href="tg://user?id=${userId}">${joinRequest.firstName} ${joinRequest.lastName || ""}</a>`;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    const adminMessage = `
üí¨ <b>–û—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userLink}:</b>
${message}
    `.trim();
    
    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º`);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–ø—Ä–æ—Å–∞
    const sentMsg = await sendTelegramMessage(bot, ADMIN_CHAT_ID, adminMessage, {
      message_thread_id: LAMP_THREAD_ID,
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: `ask_${userId}` }
          ]
        ]
      }
    });
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –∏—Ö
    if (ctx.message.photo || ctx.message.video) {
      console.log('üì∑ –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –º–µ–¥–∏–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º');
      await bot.telegram.sendCopy(ADMIN_CHAT_ID, ctx.message, { 
        message_thread_id: LAMP_THREAD_ID,
        caption: `–ú–µ–¥–∏–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userLink}`,
        parse_mode: 'HTML'
      });
    }
    
    console.log(`‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω`);
    return true; // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    return false;
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏
 * @async
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç callback query
 */
async function handleJoinRequestCallback(bot, ctx) {
  try {
    const data = ctx.callbackQuery.data;
    console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ callback:', data);
    
    if (!data) {
      console.error('‚ùå –ü–æ–ª—É—á–µ–Ω—ã –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ callback');
      return; // –ù–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–¥–µ—Å—å
    }
    
    // –†–∞–∑–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ callback –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
    if (data.startsWith('ask_')) {
      const userId = data.split('_')[1];
      console.log(`‚ùì –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
      await handleAskQuestion(bot, ctx, userId);
    }
    else {
      console.error('‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö callback:', data);
      // –ù–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–¥–µ—Å—å
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback –∑–∞–ø—Ä–æ—Å–∞:', error);
    // –ù–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –ø—Ä–∏ –æ—à–∏–±–∫–µ, –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
    throw error;
  }
}

module.exports = {
  handleAskQuestion,
  sendAdminQuestion,
  handleUserReply,
  handleJoinRequestCallback
};