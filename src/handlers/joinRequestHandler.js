/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —á–∞—Ç
 * @module joinRequestHandler
 */

const { sendTelegramMessage } = require('../utils/messaging');
const { 
  isUserAccessError, 
  isJoinRequestMissing, 
  formatUserAccessError 
} = require('../utils/errorHandler');
const { 
  saveJoinRequest, 
  updateJoinRequestStatus, 
  addMessageToJoinRequest, 
  getJoinRequestByUserId,
  saveUserButtonMessage,
  getUserButtonMessages,
  updateJoinRequestStatusWithData
} = require('../db');
const { ADMIN_CHAT_ID, LAMP_THREAD_ID, MONO_PITER_CHAT_ID } = require('../config');

/**
 * –•—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–∂–∏–¥–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
 * @type {Map<string, Object>}
 */
const pendingQuestions = new Map();



/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
 * @async
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegraf
 * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—å—è –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä—è–µ—Ç—Å—è
 */
async function handleApproveRequest(bot, ctx, userId) {
  try {
    console.log(`üü¢ –ù–∞—á–∞—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞—è–≤–∫–µ –ø–µ—Ä–µ–¥ –æ–¥–æ–±—Ä–µ–Ω–∏–µ–º
    const joinRequest = await getJoinRequestByUserId(userId);
    
    if (!joinRequest) {
      // –ù–ï –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–¥–µ—Å—å, —Ç.–∫. –æ—Ç–≤–µ—Ç —É–∂–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ
      console.log(`‚ö†Ô∏è –ó–∞—è–≤–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞`);
      return;
    }
    
    if (joinRequest.status !== 'pending') {
      // –ù–ï –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–¥–µ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      console.log(`‚ö†Ô∏è –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} —É–∂–µ –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å: ${joinRequest.status}`);
      await updateAdminMessage(bot, joinRequest, `‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ (${joinRequest.status})`);
      return;
    }
    
    // –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏...

    // –í –∫–æ–Ω—Ü–µ –ù–ï –≤—ã–∑—ã–≤–∞–µ–º ctx.answerCbQuery, —Ç.–∫. –æ—Ç–≤–µ—Ç —É–∂–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏:', error);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç
    try {
      await sendTelegramMessage(
        bot, 
        ADMIN_CHAT_ID, 
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${error.message}`,
        { message_thread_id: LAMP_THREAD_ID }
      );
    } catch (e) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç:', e);
    }
    
    // –ù–ï –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –ø—Ä–∏ –æ—à–∏–±–∫–µ, –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
    throw error;
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
 * @async
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegraf
 * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—å—è –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω—è–µ—Ç—Å—è
 */
async function handleRejectRequest(bot, ctx, userId) {
  try {
    console.log(`üî¥ –ù–∞—á–∞—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞—è–≤–∫–µ –ø–µ—Ä–µ–¥ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ–º
    const joinRequest = await getJoinRequestByUserId(userId);
    
    if (!joinRequest) {
      await ctx.answerCbQuery('–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞');
      return;
    }
    
    if (joinRequest.status !== 'pending') {
      await ctx.answerCbQuery(`–ó–∞—è–≤–∫–∞ —É–∂–µ –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å: ${joinRequest.status}`);
      await updateAdminMessage(bot, joinRequest, `‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ (${joinRequest.status})`);
      return;
    }
    
    // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ Telegram
    let telegramRejectSuccess = true;
    
    // –û—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ Telegram
    try {
      await bot.telegram.declineChatJoinRequest(MONO_PITER_CHAT_ID, userId);
    } catch (error) {
      telegramRejectSuccess = false;
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É HIDE_REQUESTER_MISSING
      if (isJoinRequestMissing(error)) {
        console.log(`‚ö†Ô∏è –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} —É–∂–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –≤ Telegram`);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
      } else {
        // –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ - –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
        throw error;
      }
    }
    
    // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    let userMessageSent = true;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try {
      const messageSent = await sendTelegramMessage(
        bot,
        userId,
        '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –ú–æ–Ω–æ–ü–∏—Ç–µ—Ä –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.'
      );
      
      if (!messageSent) {
        userMessageSent = false;
      }
    } catch (error) {
      userMessageSent = false;
      if (!isUserAccessError(error)) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, error);
      }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    await updateJoinRequestStatusWithData(userId, 'rejected', {
      telegramRejectSuccess,
      userMessageSent,
      rejectedBy: ctx.from.id,
      rejectedAt: new Date()
    });
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
    let statusMessage = '‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞';
    
    if (!telegramRejectSuccess) {
      statusMessage += ' (–∑–∞—è–≤–∫–∞ –≤ Telegram –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)';
    }
    
    if (!userMessageSent) {
      statusMessage += ' (–Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)';
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç–µ
    await updateAdminMessage(bot, joinRequest, statusMessage);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await updateAllUserMessages(bot, userId, 'rejected');
    
    // –°–æ–æ–±—â–∞–µ–º –∞–¥–º–∏–Ω—É –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏
    await ctx.answerCbQuery('–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞' + 
                           (!userMessageSent ? ' (–Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)' : ''));
    console.log(`‚úÖ –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏:', error);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç
    try {
      await sendTelegramMessage(
        bot, 
        ADMIN_CHAT_ID, 
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${error.message}`,
        { message_thread_id: LAMP_THREAD_ID }
      );
    } catch (e) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç:', e);
    }
    
    await ctx.answerCbQuery('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏: ' + error.message.substring(0, 100));
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
 * @async
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegraf
 * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –∑–∞–¥–∞–µ—Ç—Å—è –≤–æ–ø—Ä–æ—Å
 */
 async function handleAskQuestion(bot, ctx, userId) {
   try {
     console.log(`‚ùì –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
     
     // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ userId - —ç—Ç–æ —á–∏—Å–ª–æ
     const userIdNum = parseInt(userId, 10);
     if (isNaN(userIdNum)) {
       console.error(`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userId}`);
       return await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
     }
     
     // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
     const joinRequest = await getJoinRequestByUserId(userIdNum);
     console.log('üìÑ –î–∞–Ω–Ω—ã–µ –æ –∑–∞—è–≤–∫–µ:', joinRequest ? '–ù–∞–π–¥–µ–Ω—ã' : '–ù–µ –Ω–∞–π–¥–µ–Ω—ã');
     
     if (!joinRequest) {
       console.error(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userIdNum} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞—è–≤–∫–∞—Ö`);
       return await ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∑–∞–ø—Ä–æ—Å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
     }
     
     const userInfo = `${joinRequest.firstName} ${joinRequest.lastName || ''}`;
     console.log(`üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: ${userInfo}`);
     
     // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
     const adminId = ctx.from.id;
     let activeRequestsForAdmin = 0;
     
     for (const [key, data] of pendingQuestions.entries()) {
       if (data.adminId === adminId) {
         activeRequestsForAdmin++;
       }
     }
     
     // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º
     const message = `<b>–í–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userInfo} (ID: ${userIdNum})</b>
 
 <i>–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.</i>
 
 ${activeRequestsForAdmin > 0 ? 
 `<b>‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å ${activeRequestsForAdmin} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤. </b>
 –ï—Å–ª–∏ –±—É–¥–µ—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å, –≤ –Ω–∞—á–∞–ª–µ –æ—Ç–≤–µ—Ç–∞ —É–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
 <code>${userIdNum}: –í–∞—à –≤–æ–ø—Ä–æ—Å</code>` : ''}
 
 –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel –≤ –≤–∞—à–µ–º –æ—Ç–≤–µ—Ç–µ.`;
     
     // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞ —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
     const sentMsg = await ctx.reply(message, {
       reply_markup: {
         force_reply: true,
         selective: true
       },
       parse_mode: 'HTML'
     });
     
     console.log('üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞, ID —Å–æ–æ–±—â–µ–Ω–∏—è:', sentMsg.message_id);
     
     // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ –≤ –ø–∞–º—è—Ç–∏
     const requestKey = `${ctx.from.id}_${sentMsg.message_id}`;
     pendingQuestions.set(requestKey, {
       userId: userIdNum, 
       adminId: ctx.from.id,
       messageId: sentMsg.message_id,
       timestamp: Date.now()
     });
     
     console.log('üîë –°–æ—Ö—Ä–∞–Ω–µ–Ω –∫–ª—é—á –∑–∞–ø—Ä–æ—Å–∞:', requestKey);
     console.log('üìã –¢–µ–∫—É—â–∏–µ –æ–∂–∏–¥–∞—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:', Array.from(pendingQuestions.keys()));
     
     // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º-–∞—É—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç
     setTimeout(() => {
       if (pendingQuestions.has(requestKey)) {
         console.log(`‚è±Ô∏è –ò—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ ${requestKey}`);
         pendingQuestions.delete(requestKey);
         try {
           ctx.reply(`–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userInfo} (ID: ${userIdNum}) –∏—Å—Ç–µ–∫–ª–æ. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å" —Å–Ω–æ–≤–∞.`);
         } catch (e) {
           console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ç–∞–π–º–∞—É—Ç–µ:', e);
         }
       }
     }, 30 * 60 * 1000); // 30 –º–∏–Ω—É—Ç
     
     console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—Ä–æ—Å–∞ –≤–æ–ø—Ä–æ—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
   } catch (error) {
     console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≤–æ–ø—Ä–æ—Å–∞:', error);
     try {
       await ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≤–æ–ø—Ä–æ—Å–∞: ' + error.message);
     } catch (replyError) {
       console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', replyError);
     }
   }
 }

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–æ–ø—Ä–æ—Å –æ—Ç –∞–¥–º–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * @async
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegraf
 * @returns {Promise<boolean>} - –ë—ã–ª–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–∞–∫ –≤–æ–ø—Ä–æ—Å
 */
 async function sendAdminQuestion(bot, ctx) {
   try {
     // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
     if (!ctx.message || !ctx.message.reply_to_message) {
       return false;
     }
     
     console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å –≤–æ–ø—Ä–æ—Å–∞');
     
     // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –µ–≥–æ —Ç–µ–∫—É—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
     const adminId = ctx.from.id;
     console.log(`üëÆ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${adminId}`);
     
     // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –æ–∂–∏–¥–∞—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã —ç—Ç–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
     let foundUserIds = [];
     
     for (const [key, data] of pendingQuestions.entries()) {
       if (data.adminId === adminId) {
         foundUserIds.push(data.userId);
         console.log(`üîé –ù–∞–π–¥–µ–Ω –æ–∂–∏–¥–∞—é—â–∏–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${data.userId}`);
       }
     }
     
     if (foundUserIds.length === 0) {
       console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –æ–∂–∏–¥–∞—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
       return false;
     }
     
     // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ–∂–∏–¥–∞—é—â–∏–π –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
     // –ï—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —É–∫–∞–∑–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     let targetUserId;
     
     if (foundUserIds.length === 1) {
       targetUserId = foundUserIds[0];
       console.log(`‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${targetUserId}`);
     } else {
       // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É–∫–∞–∑–∞–Ω –ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—Å—Ç–µ –æ—Ç–≤–µ—Ç–∞
       const question = ctx.message.text || '';
       const userIdMatch = question.match(/^(\d+):/);
       
       if (userIdMatch) {
         const parsedId = parseInt(userIdMatch[1], 10);
         if (foundUserIds.includes(parsedId)) {
           targetUserId = parsedId;
           // –£–¥–∞–ª—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
           ctx.message.text = question.replace(/^\d+:\s*/, '');
           console.log(`‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–µ–∫—Å—Ç–∞: ${targetUserId}`);
         } else {
           await ctx.reply(`‚ùå ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${parsedId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤–∞—à–∏—Ö —Ç–µ–∫—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.
 –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤–æ–ø—Ä–æ—Å–æ–≤: ${foundUserIds.join(', ')}`);
           return true;
         }
       } else {
         await ctx.reply(`‚ùì –£ –≤–∞—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
 <ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>: –≤–∞—à –≤–æ–ø—Ä–æ—Å
 
 –ù–∞–ø—Ä–∏–º–µ—Ä: ${foundUserIds[0]}: –ö–∞–∫–∞—è —É –≤–∞—Å –º–æ–¥–µ–ª—å –º–æ–Ω–æ–∫–æ–ª–µ—Å–∞?
 
 –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤–æ–ø—Ä–æ—Å–æ–≤: ${foundUserIds.join(', ')}`);
         return true;
       }
     }
     
     // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
     const joinRequest = await getJoinRequestByUserId(targetUserId);
     if (!joinRequest) {
       console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${targetUserId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞—è–≤–∫–∞—Ö`);
       await ctx.reply(`–ó–∞—è–≤–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${targetUserId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.`);
       
       // –û—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–ø—Ä–æ—Å—ã
       for (const [key, data] of pendingQuestions.entries()) {
         if (data.userId === targetUserId) {
           pendingQuestions.delete(key);
           console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∑–∞–ø—Ä–æ—Å: ${key}`);
         }
       }
       
       return true;
     }
     
     // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
     const question = ctx.message.text;
     
     if (!question || question.trim() === '') {
       await ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞.');
       return true;
     }
     
     // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É –æ—Ç–º–µ–Ω—ã
     if (question === '/cancel') {
       // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
       for (const [key, data] of pendingQuestions.entries()) {
         if (data.userId === targetUserId && data.adminId === adminId) {
           pendingQuestions.delete(key);
         }
       }
       
       await ctx.reply('‚ùå –ó–∞–ø—Ä–æ—Å –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç–º–µ–Ω–µ–Ω.');
       return true;
     }
     
     console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}: ${question}`);
     
     // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
     await sendTelegramMessage(bot, targetUserId, `–í–æ–ø—Ä–æ—Å –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${question}`);
     
     // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞
     await addMessageToJoinRequest(targetUserId, question, 'admin');
     
     // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
     await ctx.reply(`‚úÖ –í–æ–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${joinRequest.firstName} ${joinRequest.lastName || ""} (ID: ${targetUserId}). –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç.`);
     
     // –û—á–∏—â–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ pendingQuestions
     for (const [key, data] of pendingQuestions.entries()) {
       if (data.userId === targetUserId && data.adminId === adminId) {
         pendingQuestions.delete(key);
         console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω –∫–ª—é—á –∑–∞–ø—Ä–æ—Å–∞: ${key}`);
       }
     }
     
     console.log('üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è –æ–∂–∏–¥–∞—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:', Array.from(pendingQuestions.keys()));
     
     return true;
   } catch (error) {
     console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–æ–ø—Ä–æ—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
     await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–æ–ø—Ä–æ—Å–∞: ' + error.message);
     return true;
   }
 }
 
 /**
  * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤–æ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  * @async
  * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
  * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  * @param {string} status - –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ ('approved' –∏–ª–∏ 'rejected')
  */
  async function updateAllUserMessages(bot, userId, status) {
    try {
      console.log(`üîÑ –ù–∞—á–∞—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
      
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const buttonMessages = await getUserButtonMessages(userId);
      
      if (!buttonMessages || buttonMessages.length === 0) {
        console.log(`‚ÑπÔ∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
        return;
      }
      
      console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${buttonMessages.length} —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
      
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"
      const newKeyboard = {
        inline_keyboard: [
          [
            { text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: `ask_${userId}` }
          ]
        ]
      };
      
      // –°—á–µ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
      let updatedCount = 0;
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      for (const message of buttonMessages) {
        try {
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
          await bot.telegram.editMessageReplyMarkup(
            ADMIN_CHAT_ID,
            message.messageId,
            null,
            newKeyboard
          );
          
          updatedCount++;
          console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ID: ${message.messageId}`);
        } catch (editError) {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É "message is not modified"
          if (editError.description && editError.description.includes('message is not modified')) {
            console.log(`‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ ${message.messageId} —É–∂–µ –∏–º–µ–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É`);
          } else if (editError.description && editError.description.includes('message to edit not found')) {
            console.log(`‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ ${message.messageId} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (–≤–æ–∑–º–æ–∂–Ω–æ, —É–¥–∞–ª–µ–Ω–æ)`);
          } else {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è ${message.messageId}:`, editError);
          }
        }
      }
      
      console.log(`üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫. –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${updatedCount}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö:', error);
    }
  }
 
 /**
  * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞/—Ç—Ä–µ–¥–∞
  * @async
  * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
  * @param {number} chatId - ID —á–∞—Ç–∞
  * @param {number} threadId - ID —Ç—Ä–µ–¥–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
  * @param {number} limit - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
  * @returns {Promise<Array>} - –ú–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
  */
 async function fetchRecentMessages(bot, chatId, threadId, limit = 100) {
   try {
     // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ getChat, –Ω–æ —ç—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
     // –í –∏–¥–µ–∞–ª–µ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ getChatHistory, –∫–æ–≥–¥–∞ –æ–Ω —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ Bot API
     
     // –î–ª—è –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏ –ø—Ä–∏–¥–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–∫—Å–∏-–º–µ—Ç–æ–¥
     // –≠—Ç–æ —ç–º—É–ª—è—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –≤ —á–∞—Ç–µ
     
     // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (—ç—Ç–æ –Ω–µ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –Ω–æ –≤ —Ä–∞–º–∫–∞—Ö API —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ - –ª—É—á—à–µ–µ, —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å)
     // –†–µ–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Ö—Ä–∞–Ω—è—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ
     
     // –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è "–∑–∞–≥–ª—É—à–∫–∞" –¥–ª—è –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏
     // –í —Ä–µ–∞–ª—å–Ω–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –≤–∞–º –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ–æ–±—â–µ–Ω–∏–π
     
     // –ü—Ä–∏—Ç–≤–æ—Ä–∏–º—Å—è, —á—Ç–æ –º—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
     console.log(`üîç –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞ ${chatId}, —Ç—Ä–µ–¥ ${threadId}`);
     
     // –ó–¥–µ—Å—å –º—ã –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤, —Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
     // –í –∏–¥–µ–∞–ª—å–Ω–æ–º –º–∏—Ä–µ –º—ã –±—ã —Ö—Ä–∞–Ω–∏–ª–∏ ID –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
     return [];
   } catch (error) {
     console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
     return [];
   }
 }

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 * @async
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegraf
 */
 async function handleUserReply(bot, ctx) {
   // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –≤ –ª–∏—á–∫—É –±–æ—Ç—É
   if (ctx.message.chat.type !== 'private') {
     return false;
   }
   
   const userId = ctx.from.id;
   
   try {
     console.log(`üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ`);
     
     // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—è–≤–∫–µ
     let joinRequest = null;
     try {
       joinRequest = await getJoinRequestByUserId(userId);
     } catch (dbError) {
       console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞—è–≤–∫–µ:', dbError);
       return false; // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ë–î –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–ª—å—à–µ
     }
     
     if (!joinRequest) {
       console.log(`‚ùå –ó–∞—è–≤–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
       return false; // –ù–µ—Ç –∑–∞—è–≤–∫–∏
     }
     
     // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
     if (joinRequest.status !== 'pending') {
       console.log(`‚ö†Ô∏è –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å: ${joinRequest.status}`);
       
       // –î–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
       if (joinRequest.status === 'rejected') {
         await sendTelegramMessage(
           bot,
           userId,
           '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Ä–∞–Ω–µ–µ. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω—É—é –≥—Ä—É–ø–ø—É.'
         );
         return true; // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
       }
       
       return false; // –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
     }
     
     const message = ctx.message.text || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –º–µ–¥–∏–∞-—Ñ–∞–π–ª';
     console.log(`üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${message.substring(0, 50)}${message.length > 50 ? '...' : ''}`);
     
     // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞
     try {
       await addMessageToJoinRequest(userId, message, 'user');
     } catch (dbError) {
       console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ë–î:', dbError);
       // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
     }
     
     // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     const userLink = `<a href="tg://user?id=${userId}">${joinRequest.firstName} ${joinRequest.lastName || ""}</a>`;
     
     // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
     const adminMessage = `
 üí¨ <b>–û—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userLink}:</b>
 ${message}
     `.trim();
     
     console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º`);
     
     // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
     const sentMsg = await sendTelegramMessage(bot, ADMIN_CHAT_ID, adminMessage, {
       message_thread_id: LAMP_THREAD_ID,
       parse_mode: 'HTML',
       reply_markup: {
         inline_keyboard: [
           [
             { text: '‚úÖ –ü—Ä–∏–Ω—è—Ç—å', callback_data: `approve_${userId}` },
             { text: '‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data: `reject_${userId}` }
           ],
           [
             { text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: `ask_${userId}` }
           ]
         ]
       }
     });
     
     // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –ë–î
     await saveUserButtonMessage(userId, sentMsg.message_id);
     
     // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –∏—Ö
     if (ctx.message.photo || ctx.message.video) {
       console.log('üì∑ –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –º–µ–¥–∏–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º');
       await bot.telegram.sendCopy(ADMIN_CHAT_ID, ctx.message, { 
         message_thread_id: LAMP_THREAD_ID,
         caption: `–ú–µ–¥–∏–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userLink}`,
         parse_mode: 'HTML'
       });
     }
     
     console.log(`‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω`);
     return true; // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
   } catch (error) {
     console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
     return false;
   }
 }

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞—è–≤–∫–æ–π –≤ –∞–¥–º–∏–Ω-—á–∞—Ç–µ
 * @async
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 * @param {Object} joinRequest - –î–∞–Ω–Ω—ã–µ –æ –∑–∞—è–≤–∫–µ
 * @param {string} statusText - –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
 */
 async function updateAdminMessage(bot, joinRequest, statusText) {
   try {
     // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
     if (!joinRequest || !joinRequest.messageId) {
       console.log('‚ùå ID —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞—è–≤–∫–µ');
       return;
     }
     
     // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
     const { userId, firstName, lastName, username, messageId } = joinRequest;
     const userLink = `<a href="tg://user?id=${userId}">${firstName} ${lastName || ""}</a>`;
     
     console.log(`üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${messageId} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
     
     // –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     const messageText = `
 ${userLink} –ø–æ–¥–∞–ª(–∞) –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ
 ID: <a href="tg://user?id=${userId}">${userId}</a>
 –õ–æ–≥–∏–Ω: ${username ? `@${username}` : '–Ω–µ—Ç—É'}
 –ò–º—è: ${firstName} ${lastName || ""}
 –°—Ç–∞—Ç—É—Å: ${statusText}
     `.trim();
     
     // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
     let replyMarkup;
     
     if (joinRequest.status === 'pending') {
       // –î–ª—è –∑–∞—è–≤–æ–∫ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
       replyMarkup = {
         inline_keyboard: [
           [
             { text: '‚úÖ –ü—Ä–∏–Ω—è—Ç—å', callback_data: `approve_${userId}` },
             { text: '‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data: `reject_${userId}` }
           ],
           [
             { text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: `ask_${userId}` }
           ]
         ]
       };
     } else {
       // –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"
       replyMarkup = {
         inline_keyboard: [
           [
             { text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data: `ask_${userId}` }
           ]
         ]
       };
     }
     
     try {
       // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
       await bot.telegram.editMessageText(
         ADMIN_CHAT_ID,
         messageId,
         null,
         messageText,
         {
           parse_mode: 'HTML',
           reply_markup: replyMarkup
         }
       );
       
       console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ`);
     } catch (error) {
       // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ "message is not modified"
       if (error.description && error.description.includes('message is not modified')) {
         console.log('‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é');
       } else {
         // –ï—Å–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ - –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–ª—å—à–µ
         throw error;
       }
     }
   } catch (error) {
     console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
   }
 }

 /**
  * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏
  * @async
  * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
  * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç callback query
  */
 async function handleJoinRequestCallback(bot, ctx) {
   try {
     const data = ctx.callbackQuery.data;
     console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ callback:', data);
     
     if (!data) {
       console.error('‚ùå –ü–æ–ª—É—á–µ–Ω—ã –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ callback');
       return; // –ù–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–¥–µ—Å—å
     }
     
     // –†–∞–∑–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ callback –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
     if (data.startsWith('approve_')) {
       const userId = data.split('_')[1];
       console.log(`üü¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
       await handleApproveRequest(bot, ctx, userId);
       
       // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ,
       // –∞ –Ω–µ —á–µ—Ä–µ–∑ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     } 
     else if (data.startsWith('reject_')) {
       const userId = data.split('_')[1];
       console.log(`üî¥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
       await handleRejectRequest(bot, ctx, userId);
     }
     else if (data.startsWith('ask_')) {
       const userId = data.split('_')[1];
       console.log(`‚ùì –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
       await handleAskQuestion(bot, ctx, userId);
     }
     else {
       console.error('‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö callback:', data);
       // –ù–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–¥–µ—Å—å
     }
   } catch (error) {
     console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback –∑–∞–ø—Ä–æ—Å–∞:', error);
     // –ù–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –ø—Ä–∏ –æ—à–∏–±–∫–µ, –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
     throw error;
   }
 }

module.exports = {
  handleApproveRequest,
  handleRejectRequest,
  handleAskQuestion,
  sendAdminQuestion,
  handleUserReply,
  handleJoinRequestCallback,
  updateAllUserMessages
};